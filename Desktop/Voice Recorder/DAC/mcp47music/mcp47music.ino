
//
// Arduino Uno/2009:
// ----------------------
// MCP4725:  SDA pin   -> Arduino Analog 4 or the dedicated SDA pin
//           SCL pin   -> Arduino Analog 5 or the dedicated SCL pin
//
// Arduino Leonardo:
// ----------------------
// MCP4725:  SDA pin   -> Arduino Digital 2 or the dedicated SDA pin
//           SCL pin   -> Arduino Digital 3 or the dedicated SCL pin
//
// Arduino Mega:
// ----------------------
// MCP4725:  SDA pin   -> Arduino Digital 20 (SDA) or the dedicated SDA pin
//           SCL pin   -> Arduino Digital 21 (SCL) or the dedicated SCL pin
//
// Arduino Due:
// ----------------------
// MCP4725:  SDA pin   -> Arduino Digital 20 (SDA) or the dedicated SDA1 (Digital 70) pin
//           SCL pin   -> Arduino Digital 21 (SCL) or the dedicated SCL1 (Digital 71) pin
//
// The internal pull-up resistors will be activated when using the 
// hardware I2C interfaces.
//
// You can connect the MCP4725 to any available pin but if you use any
// other than what is described above the library will fall back to
// a software-based, TWI-like protocol which will require exclusive access 
// to the pins used, and you will also have to use appropriate, external
// pull-up resistors on the data and clock signals.
//

#include <MCP4725.h>

MCP4725 dac(SDA, SCL);


#define DAC_TABLE    musicvals
const uint16_t musicvals[1857] PROGMEM =
{
  0, 337, 32, 16, 273, 96, 273, 0, 674, 0, 0, 594, 0, 0, 465, 176, 0, 433, 64, 0, 0, 497, 0, 369, 112, 0, 16, 513, 0, 0, 369, 0, 0, 208, 192, 0, 48, 273, 0, 0, 0, 64, 0, 0, 128, 128, 0, 80, 16, 80, 0, 32, 16, 80, 16, 32, 16, 32, 112, 0, 0, 192, 0, 64, 64, 16, 0, 48, 0, 32, 0, 0, 0, 0, 0, 64, 0, 0, 80, 32, 240, 0, 369, 0, 80, 0, 80, 144, 0, 0, 48, 128, 0, 0, 0, 32, 0, 0, 0, 48, 0, 0, 0, 48, 16, 0, 64, 0, 48, 0, 0, 64, 0, 0, 0, 32, 0, 16, 0, 16, 32, 0, 0, 80, 0, 0, 96, 0, 0, 0, 0, 16, 16, 0, 80, 0, 80, 16, 0, 48, 0, 0, 48, 0, 0, 0, 0, 48, 0, 0, 48, 64, 32, 0, 0, 96, 0, 32, 80, 0, 0, 0, 0, 0, 0, 0, 16, 48, 0, 16, 0, 16, 0, 16, 0, 0, 0, 16, 0, 48, 0, 64, 0, 32, 0, 32, 16, 32, 0, 0, 0, 0, 0, 256, 369, 160, 0, 385, 0, 0, 690, 0, 0, 610, 0, 0, 513, 48, 0, 128, 417, 0, 0, 401, 0, 0, 160, 0, 0, 449, 0, 0, 256, 128, 0, 96, 417, 0, 0, 176, 0, 0, 0, 64, 0, 0, 16, 128, 0, 0, 112, 32, 0, 16, 144, 0, 16, 128, 32, 48, 64, 0, 0, 96, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 32, 208, 562, 128, 0, 0, 112, 128, 0, 0, 64, 96, 0, 0, 48, 0, 0, 0, 0, 0, 0, 32, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16, 48, 16, 0, 0, 160, 112, 401, 96, 0, 224, 0, 0, 0, 0, 64, 16, 305, 144, 16, 0, 0, 208, 0, 0, 224, 0, 160, 96, 0, 224, 0, 0, 0, 0, 16, 0, 208, 80, 0, 32, 0, 48, 0, 96, 0, 0, 0, 0, 128, 0, 224, 48, 0, 0, 0, 16, 0, 176, 80, 
16, 96, 0, 48, 0, 64, 0, 0, 0, 0, 64, 16, 240, 48, 0, 96, 0, 64, 48, 16, 0, 0, 337, 16, 0, 0, 112, 48, 0, 0, 0, 160, 0, 0, 80, 80, 32, 0, 32, 0, 112, 32, 32, 0, 0, 0, 0, 160, 16, 48, 48, 0, 16, 16, 112, 0, 32, 0, 0, 16, 32, 144, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 80, 0, 32, 0, 0, 32, 80, 112, 0, 0, 0, 0, 0, 80, 0, 0, 16, 0, 80, 0, 16, 0, 16, 0, 80, 64, 0, 32, 0, 112, 0, 96, 64, 0, 0, 0, 32, 0, 64, 0, 16, 0, 16, 32, 0, 80, 0, 80, 0, 96, 0, 16, 32, 0, 80, 0, 64, 0, 48, 0, 32, 96, 0, 0, 0, 48, 353, 0, 0, 289, 0, 0, 240, 96, 0, 144, 144, 0, 0, 0, 32, 0, 0, 0, 305, 0, 0, 144, 0, 0, 144, 240, 0, 0, 176, 0, 0, 0, 48, 0, 0, 192, 80, 80, 0, 465, 0, 112, 0, 0, 915, 
0, 112, 417, 0, 0, 738, 96, 0, 0, 0, 16, 0, 658, 208, 0, 0, 16, 0, 353, 0, 0, 0, 626, 337, 48, 337, 0, 0, 192, 0, 0, 96, 0, 48, 0, 48, 224, 0, 112, 0, 0, 176, 369, 0, 240, 224, 0, 0, 64, 224, 0, 0, 208, 0, 0, 0, 208, 321, 0, 0, 32, 80, 0, 0, 433, 273, 0, 96, 0, 931, 0, 224, 80, 0, 385, 433, 0, 369, 305, 0, 224, 176, 0, 401, 0, 0, 642, 80, 0, 144, 208, 0, 32, 273, 0, 0, 497, 0, 0, 96, 16, 112, 0, 80, 208, 0, 0, 305, 112, 0, 0, 0, 0, 208, 208, 16, 240, 32, 0, 0, 240, 32, 0, 0, 0, 0, 96, 0, 112, 48, 0, 48, 0, 0, 0, 0, 0, 417, 0, 0, 208, 0, 0, 481, 80, 0, 0, 0, 273, 208, 80, 0, 0, 0, 0, 144, 0, 208, 16, 0, 0, 112, 144, 224, 0, 0, 0, 128, 0, 305, 240, 0, 0, 0, 0, 144, 32, 0, 240, 16, 0, 32, 32, 0, 353, 16, 0, 128, 0, 32, 160, 80, 128, 32, 0, 0, 144, 0, 192, 176, 0, 0, 192, 160, 0, 0, 0, 0, 32, 128, 0, 240, 64, 0, 112, 
16, 96, 208, 0, 0, 16, 0, 32, 192, 0, 0, 112, 0, 64, 80, 0, 48, 0, 32, 0, 0, 0, 16, 0, 224, 64, 0, 0, 0, 0, 192, 144, 64, 0, 0, 112, 273, 0, 80, 369, 0, 513, 0, 0, 578, 0, 0, 321, 128, 0, 0, 497, 0, 0, 353, 0, 16, 417, 0, 0, 449, 0, 0, 48, 546, 0, 0, 433, 0, 0, 0, 433, 64, 0, 0, 0, 0, 273, 481, 0, 0, 0, 0, 240, 481, 96, 0, 0, 16, 224, 433, 0, 0, 0, 0, 128, 321, 0, 0, 0, 0, 240, 144, 0, 0, 0, 0, 96, 0, 0, 176, 0, 0, 32, 0, 80, 305, 0, 0, 0, 96, 80, 0, 0, 353, 64, 0, 0, 80, 208, 0, 48, 176, 0, 0, 0, 192, 353, 0, 0, 64, 0, 0, 48, 64, 96, 0, 0, 80, 321, 112, 0, 0, 0, 208, 0, 64, 96, 0, 0, 32, 48, 32, 144, 0, 96, 96, 0, 0, 0, 48, 224, 0, 0, 176, 0, 0, 0, 32, 96, 32, 0, 0, 16, 48, 256, 0, 0, 0, 0, 0, 353, 160, 0, 0, 0, 0, 32, 128, 112, 128, 0, 0, 0, 48, 273, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 16, 0, 0, 176, 0, 321, 0, 0, 16, 64, 160, 273, 16, 32, 0, 0, 144, 0, 48, 112, 0, 0, 32, 96, 144, 48, 48, 0, 0, 0, 0, 128, 48, 0, 0, 0, 0, 96, 128, 112, 96, 0, 0, 0, 0, 112, 0, 0, 32, 0, 0, 0, 0, 80, 80, 16, 48, 0, 0, 0, 0, 16, 0, 80, 0, 0, 0, 16, 64, 160, 0, 0, 0, 0, 144, 160, 0, 0, 0, 0, 80, 64, 0, 48, 224, 0, 32, 0, 0, 0, 128, 128, 16, 0, 0, 0, 32, 160, 80, 0, 0, 0, 128, 273, 176, 0, 0, 0, 0, 208, 16, 0, 0, 0, 80, 192, 0, 0, 48, 0, 0, 353, 0, 0, 337, 0, 0, 64, 305, 0, 128, 0, 0, 0, 96, 0, 0, 160, 48, 0, 0, 64, 369, 0, 
0, 353, 0, 0, 0, 96, 224, 48, 0, 0, 224, 0, 0, 289, 208, 0, 0, 0, 706, 0, 144, 321, 0, 369, 224, 0, 417, 224, 0, 369, 273, 0, 176, 176, 0, 32, 401, 0, 240, 80, 0, 80, 433, 0, 64, 465, 0, 0, 112, 208, 0, 0, 64, 0, 0, 0, 256, 0, 0, 112, 16, 0, 160, 112, 96, 192, 0, 0, 16, 176, 0, 0, 0, 0, 48, 16, 0, 32, 16, 0, 0, 0, 0, 0, 0, 0, 96, 417, 16, 128, 0, 610, 0, 497, 160, 0, 513, 0, 0, 497, 48, 0, 0, 642, 0, 0, 385, 0, 0, 529, 0, 0, 417, 0, 0, 128, 546, 0, 0, 224, 0, 0, 16, 176, 0, 0, 64, 0, 0, 0, 
144, 0, 0, 144, 80, 0, 16, 256, 48, 112, 208, 0, 0, 0, 0, 64, 208, 0, 0, 0, 0, 80, 48, 0, 0, 0, 0, 0, 0, 0, 273, 0, 0, 658, 224, 0, 0, 64, 16, 0, 32, 160, 64, 0, 0, 
0, 160, 0, 0, 0, 0, 32, 0, 0, 0, 0, 305, 0, 0, 0, 160, 0, 96, 0, 160, 16, 0, 0, 0, 192, 144, 16, 0, 160, 0, 64, 0, 176, 0, 0, 0, 128, 0, 64, 80, 64, 0, 0, 16, 80, 0, 32, 0, 0, 96, 0, 0, 16, 0, 224, 0, 0, 0, 16, 0, 128, 0, 128, 96, 48, 0, 80, 0, 128, 0, 0, 0, 0, 0, 128, 0, 0, 16, 0, 32, 0, 0, 224, 80, 16, 0, 176, 0, 0, 0, 48, 0, 
160, 64, 64, 0, 64, 0, 0, 0, 513, 112, 0, 0, 497, 0, 674, 0, 0, 562, 16, 0, 224, 240, 0, 48, 594, 0, 0, 369, 0, 0, 256, 0, 0, 369, 0, 0, 289, 240, 0, 128, 321, 0, 0, 160, 0, 0, 80, 0, 16, 0, 16, 64, 0, 16, 160, 0, 0, 128, 16, 96, 192, 0, 64, 48, 48, 0, 48, 96, 0, 0, 0, 0, 0, 0, 0, 0, 16, 0, 96, 32, 16, 0, 48, 256, 594, 32, 32, 0, 80, 96, 80, 0, 32, 16, 0, 0, 0, 0, 0, 0, 0, 0, 16, 80, 16, 0, 32, 0, 16, 0, 96, 0, 0, 0, 0, 0, 0, 96, 80, 48, 0, 80, 32, 16, 32, 32, 0, 0, 0, 0, 48, 0, 0, 16, 48, 
16, 0, 0, 0, 0, 16, 48, 48, 48, 0, 48, 32, 0, 64, 96, 16, 0, 48, 16, 48, 0, 0, 0, 0, 0, 0, 48, 32, 0, 0, 0, 0, 0, 32, 80, 0, 0, 64, 0, 0, 0, 0, 0, 48, 0, 96, 32, 48, 0, 0, 32, 0, 16, 16, 0, 0, 0, 32, 32, 0, 0, 64, 32, 32, 96, 0, 0, 0, 417, 224, 289, 192, 0, 0, 0, 64, 96, 0, 0, 32, 16, 96, 96, 0, 0, 0, 0, 0, 80, 0, 0, 0, 0, 0, 0, 80, 0, 64, 0, 96, 16, 16, 0, 0, 0, 32, 64, 0, 48, 0, 0, 32, 16, 16, 0, 32, 16, 32, 0, 0, 0, 0, 0, 0, 112, 0, 16, 16, 64, 0, 0, 0, 0, 0, 16, 64, 0, 0, 0, 0, 48, 0, 16, 0, 64, 0, 32, 96, 0, 0, 0, 0, 0, 48, 0, 0, 0, 0, 0, 32, 0, 0, 0, 80, 48, 16, 0, 0, 0, 32, 32, 144, 48, 32, 0, 80, 16, 16, 0, 0, 0, 0, 0, 289, 80, 0, 0, 449, 0, 0, 369, 0, 0, 128, 208, 0, 0, 64, 0, 0, 0, 160, 0, 0, 96, 0, 0, 96, 240, 0, 0, 16, 32, 0, 0, 48, 160, 0, 80, 96, 64, 513, 931, 0, 513, 0, 0, 1300, 0, 289, 112, 0, 0, 1043, 0, 0, 0, 0, 80, 256, 273, 0, 0, 0, 32, 0, 112, 160, 0, 0, 497, 273, 96, 289, 0, 0, 208, 0, 0, 112, 16, 0, 0, 0, 385, 16, 64, 0, 0, 160, 417, 0, 481, 192, 0, 0, 
16, 192, 0, 0, 305, 16, 0, 0, 289, 417, 0, 0, 64, 96, 16, 0, 337, 369, 0, 208, 192, 192, 0, 497, 0, 0, 417, 0, 0, 401, 0, 0, 240, 112, 0, 0, 594, 0, 0, 353, 0, 0, 176, 0, 0, 16, 160, 0, 208, 176, 0, 144, 112, 80, 0, 80, 192};


void setup(void) 
{
  dac.begin();
}

void loop(void) 
{
  for (uint16_t i = 0; i < (sizeof(DAC_TABLE)/2); i++)
    dac.setValue(pgm_read_word(&(DAC_TABLE[i])));
}
