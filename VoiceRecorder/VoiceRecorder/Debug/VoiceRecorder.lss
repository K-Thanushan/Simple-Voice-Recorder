
VoiceRecorder.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000011e  00800200  00000ca4  00000d38  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000ca4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000005  0080031e  0080031e  00000e56  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000e56  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000e88  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d8  00000000  00000000  00000ec8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002cf8  00000000  00000000  00000fa0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000111c  00000000  00000000  00003c98  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000b4e  00000000  00000000  00004db4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000238  00000000  00000000  00005904  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000901  00000000  00000000  00005b3c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001210  00000000  00000000  0000643d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000a8  00000000  00000000  0000764d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	72 c0       	rjmp	.+228    	; 0xe6 <__ctors_end>
   2:	00 00       	nop
   4:	9e c0       	rjmp	.+316    	; 0x142 <__bad_interrupt>
   6:	00 00       	nop
   8:	9c c0       	rjmp	.+312    	; 0x142 <__bad_interrupt>
   a:	00 00       	nop
   c:	9a c0       	rjmp	.+308    	; 0x142 <__bad_interrupt>
   e:	00 00       	nop
  10:	98 c0       	rjmp	.+304    	; 0x142 <__bad_interrupt>
  12:	00 00       	nop
  14:	96 c0       	rjmp	.+300    	; 0x142 <__bad_interrupt>
  16:	00 00       	nop
  18:	94 c0       	rjmp	.+296    	; 0x142 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	92 c0       	rjmp	.+292    	; 0x142 <__bad_interrupt>
  1e:	00 00       	nop
  20:	90 c0       	rjmp	.+288    	; 0x142 <__bad_interrupt>
  22:	00 00       	nop
  24:	8e c0       	rjmp	.+284    	; 0x142 <__bad_interrupt>
  26:	00 00       	nop
  28:	8c c0       	rjmp	.+280    	; 0x142 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	8a c0       	rjmp	.+276    	; 0x142 <__bad_interrupt>
  2e:	00 00       	nop
  30:	88 c0       	rjmp	.+272    	; 0x142 <__bad_interrupt>
  32:	00 00       	nop
  34:	86 c0       	rjmp	.+268    	; 0x142 <__bad_interrupt>
  36:	00 00       	nop
  38:	84 c0       	rjmp	.+264    	; 0x142 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	82 c0       	rjmp	.+260    	; 0x142 <__bad_interrupt>
  3e:	00 00       	nop
  40:	80 c0       	rjmp	.+256    	; 0x142 <__bad_interrupt>
  42:	00 00       	nop
  44:	7e c0       	rjmp	.+252    	; 0x142 <__bad_interrupt>
  46:	00 00       	nop
  48:	7c c0       	rjmp	.+248    	; 0x142 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	7a c0       	rjmp	.+244    	; 0x142 <__bad_interrupt>
  4e:	00 00       	nop
  50:	78 c0       	rjmp	.+240    	; 0x142 <__bad_interrupt>
  52:	00 00       	nop
  54:	76 c0       	rjmp	.+236    	; 0x142 <__bad_interrupt>
  56:	00 00       	nop
  58:	74 c0       	rjmp	.+232    	; 0x142 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	72 c0       	rjmp	.+228    	; 0x142 <__bad_interrupt>
  5e:	00 00       	nop
  60:	70 c0       	rjmp	.+224    	; 0x142 <__bad_interrupt>
  62:	00 00       	nop
  64:	6e c0       	rjmp	.+220    	; 0x142 <__bad_interrupt>
  66:	00 00       	nop
  68:	6c c0       	rjmp	.+216    	; 0x142 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	6a c0       	rjmp	.+212    	; 0x142 <__bad_interrupt>
  6e:	00 00       	nop
  70:	68 c0       	rjmp	.+208    	; 0x142 <__bad_interrupt>
  72:	00 00       	nop
  74:	66 c0       	rjmp	.+204    	; 0x142 <__bad_interrupt>
  76:	00 00       	nop
  78:	64 c0       	rjmp	.+200    	; 0x142 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	62 c0       	rjmp	.+196    	; 0x142 <__bad_interrupt>
  7e:	00 00       	nop
  80:	60 c0       	rjmp	.+192    	; 0x142 <__bad_interrupt>
  82:	00 00       	nop
  84:	5e c0       	rjmp	.+188    	; 0x142 <__bad_interrupt>
  86:	00 00       	nop
  88:	5c c0       	rjmp	.+184    	; 0x142 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	5a c0       	rjmp	.+180    	; 0x142 <__bad_interrupt>
  8e:	00 00       	nop
  90:	58 c0       	rjmp	.+176    	; 0x142 <__bad_interrupt>
  92:	00 00       	nop
  94:	56 c0       	rjmp	.+172    	; 0x142 <__bad_interrupt>
  96:	00 00       	nop
  98:	54 c0       	rjmp	.+168    	; 0x142 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	52 c0       	rjmp	.+164    	; 0x142 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	50 c0       	rjmp	.+160    	; 0x142 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	4e c0       	rjmp	.+156    	; 0x142 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	4c c0       	rjmp	.+152    	; 0x142 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	4a c0       	rjmp	.+148    	; 0x142 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	48 c0       	rjmp	.+144    	; 0x142 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	46 c0       	rjmp	.+140    	; 0x142 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	44 c0       	rjmp	.+136    	; 0x142 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	42 c0       	rjmp	.+132    	; 0x142 <__bad_interrupt>
  be:	00 00       	nop
  c0:	40 c0       	rjmp	.+128    	; 0x142 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	3e c0       	rjmp	.+124    	; 0x142 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	3c c0       	rjmp	.+120    	; 0x142 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	3a c0       	rjmp	.+116    	; 0x142 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	38 c0       	rjmp	.+112    	; 0x142 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	36 c0       	rjmp	.+108    	; 0x142 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	34 c0       	rjmp	.+104    	; 0x142 <__bad_interrupt>
  da:	00 00       	nop
  dc:	32 c0       	rjmp	.+100    	; 0x142 <__bad_interrupt>
  de:	00 00       	nop
  e0:	30 c0       	rjmp	.+96     	; 0x142 <__bad_interrupt>
	...

000000e4 <__ctors_start>:
  e4:	0f 06       	cpc	r0, r31

000000e6 <__ctors_end>:
  e6:	11 24       	eor	r1, r1
  e8:	1f be       	out	0x3f, r1	; 63
  ea:	cf ef       	ldi	r28, 0xFF	; 255
  ec:	d1 e2       	ldi	r29, 0x21	; 33
  ee:	de bf       	out	0x3e, r29	; 62
  f0:	cd bf       	out	0x3d, r28	; 61
  f2:	00 e0       	ldi	r16, 0x00	; 0
  f4:	0c bf       	out	0x3c, r16	; 60

000000f6 <__do_copy_data>:
  f6:	13 e0       	ldi	r17, 0x03	; 3
  f8:	a0 e0       	ldi	r26, 0x00	; 0
  fa:	b2 e0       	ldi	r27, 0x02	; 2
  fc:	e4 ea       	ldi	r30, 0xA4	; 164
  fe:	fc e0       	ldi	r31, 0x0C	; 12
 100:	00 e0       	ldi	r16, 0x00	; 0
 102:	0b bf       	out	0x3b, r16	; 59
 104:	02 c0       	rjmp	.+4      	; 0x10a <__do_copy_data+0x14>
 106:	07 90       	elpm	r0, Z+
 108:	0d 92       	st	X+, r0
 10a:	ae 31       	cpi	r26, 0x1E	; 30
 10c:	b1 07       	cpc	r27, r17
 10e:	d9 f7       	brne	.-10     	; 0x106 <__do_copy_data+0x10>

00000110 <__do_clear_bss>:
 110:	23 e0       	ldi	r18, 0x03	; 3
 112:	ae e1       	ldi	r26, 0x1E	; 30
 114:	b3 e0       	ldi	r27, 0x03	; 3
 116:	01 c0       	rjmp	.+2      	; 0x11a <.do_clear_bss_start>

00000118 <.do_clear_bss_loop>:
 118:	1d 92       	st	X+, r1

0000011a <.do_clear_bss_start>:
 11a:	a3 32       	cpi	r26, 0x23	; 35
 11c:	b2 07       	cpc	r27, r18
 11e:	e1 f7       	brne	.-8      	; 0x118 <.do_clear_bss_loop>

00000120 <__do_global_ctors>:
 120:	10 e0       	ldi	r17, 0x00	; 0
 122:	c3 e7       	ldi	r28, 0x73	; 115
 124:	d0 e0       	ldi	r29, 0x00	; 0
 126:	00 e0       	ldi	r16, 0x00	; 0
 128:	05 c0       	rjmp	.+10     	; 0x134 <__do_global_ctors+0x14>
 12a:	21 97       	sbiw	r28, 0x01	; 1
 12c:	01 09       	sbc	r16, r1
 12e:	80 2f       	mov	r24, r16
 130:	fe 01       	movw	r30, r28
 132:	7b d5       	rcall	.+2806   	; 0xc2a <__tablejump2__>
 134:	c2 37       	cpi	r28, 0x72	; 114
 136:	d1 07       	cpc	r29, r17
 138:	80 e0       	ldi	r24, 0x00	; 0
 13a:	08 07       	cpc	r16, r24
 13c:	b1 f7       	brne	.-20     	; 0x12a <__do_global_ctors+0xa>
 13e:	df d0       	rcall	.+446    	; 0x2fe <main>
 140:	af c5       	rjmp	.+2910   	; 0xca0 <_exit>

00000142 <__bad_interrupt>:
 142:	5e cf       	rjmp	.-324    	; 0x0 <__vectors>

00000144 <_ZN3LCDC1Ei>:
#define Lcd_Port PORTE
#define RS PORTE2
#define EN PORTE3


LCD::LCD(int a){
 144:	08 95       	ret

00000146 <_ZN3LCD7CommandEh>:

}

void LCD::Command(unsigned char command)
{
	Lcd_Port = (Lcd_Port & 0x0F) | (command & 0xF0);
 146:	8e b1       	in	r24, 0x0e	; 14
 148:	8f 70       	andi	r24, 0x0F	; 15
 14a:	96 2f       	mov	r25, r22
 14c:	90 7f       	andi	r25, 0xF0	; 240
 14e:	89 2b       	or	r24, r25
 150:	8e b9       	out	0x0e, r24	; 14
	Lcd_Port &= ~(1<<RS);
 152:	8e b1       	in	r24, 0x0e	; 14
 154:	8b 7f       	andi	r24, 0xFB	; 251
 156:	8e b9       	out	0x0e, r24	; 14
	Lcd_Port |= (1<<EN);
 158:	8e b1       	in	r24, 0x0e	; 14
 15a:	88 60       	ori	r24, 0x08	; 8
 15c:	8e b9       	out	0x0e, r24	; 14
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 15e:	85 e0       	ldi	r24, 0x05	; 5
 160:	8a 95       	dec	r24
 162:	f1 f7       	brne	.-4      	; 0x160 <_ZN3LCD7CommandEh+0x1a>
 164:	00 00       	nop
	_delay_us(1);
	Lcd_Port &= ~(1<<EN);
 166:	8e b1       	in	r24, 0x0e	; 14
 168:	87 7f       	andi	r24, 0xF7	; 247
 16a:	8e b9       	out	0x0e, r24	; 14
 16c:	8f e1       	ldi	r24, 0x1F	; 31
 16e:	93 e0       	ldi	r25, 0x03	; 3
 170:	01 97       	sbiw	r24, 0x01	; 1
 172:	f1 f7       	brne	.-4      	; 0x170 <_ZN3LCD7CommandEh+0x2a>
 174:	00 c0       	rjmp	.+0      	; 0x176 <_ZN3LCD7CommandEh+0x30>
 176:	00 00       	nop
	
	_delay_us(200);
	
	Lcd_Port = (Lcd_Port & 0x0F) | (command << 4);
 178:	8e b1       	in	r24, 0x0e	; 14
 17a:	90 e1       	ldi	r25, 0x10	; 16
 17c:	69 9f       	mul	r22, r25
 17e:	b0 01       	movw	r22, r0
 180:	11 24       	eor	r1, r1
 182:	8f 70       	andi	r24, 0x0F	; 15
 184:	68 2b       	or	r22, r24
 186:	6e b9       	out	0x0e, r22	; 14
	Lcd_Port &= ~(1<<RS);
 188:	8e b1       	in	r24, 0x0e	; 14
 18a:	8b 7f       	andi	r24, 0xFB	; 251
 18c:	8e b9       	out	0x0e, r24	; 14
	Lcd_Port |= (1<<EN);
 18e:	8e b1       	in	r24, 0x0e	; 14
 190:	88 60       	ori	r24, 0x08	; 8
 192:	8e b9       	out	0x0e, r24	; 14
 194:	85 e0       	ldi	r24, 0x05	; 5
 196:	8a 95       	dec	r24
 198:	f1 f7       	brne	.-4      	; 0x196 <_ZN3LCD7CommandEh+0x50>
 19a:	00 00       	nop
	_delay_us(1);
	Lcd_Port &= ~(1<<EN);
 19c:	8e b1       	in	r24, 0x0e	; 14
 19e:	87 7f       	andi	r24, 0xF7	; 247
 1a0:	8e b9       	out	0x0e, r24	; 14
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1a2:	8f e3       	ldi	r24, 0x3F	; 63
 1a4:	9f e1       	ldi	r25, 0x1F	; 31
 1a6:	01 97       	sbiw	r24, 0x01	; 1
 1a8:	f1 f7       	brne	.-4      	; 0x1a6 <_ZN3LCD7CommandEh+0x60>
 1aa:	00 c0       	rjmp	.+0      	; 0x1ac <_ZN3LCD7CommandEh+0x66>
 1ac:	00 00       	nop
 1ae:	08 95       	ret

000001b0 <_ZN3LCD5PrintEh>:
	_delay_ms(2);
}

void LCD::Print(unsigned char Data)
{
	Lcd_Port = (Lcd_Port & 0x0F) | (Data & 0xF0);
 1b0:	8e b1       	in	r24, 0x0e	; 14
 1b2:	8f 70       	andi	r24, 0x0F	; 15
 1b4:	96 2f       	mov	r25, r22
 1b6:	90 7f       	andi	r25, 0xF0	; 240
 1b8:	89 2b       	or	r24, r25
 1ba:	8e b9       	out	0x0e, r24	; 14
	Lcd_Port |= (1<<RS);
 1bc:	8e b1       	in	r24, 0x0e	; 14
 1be:	84 60       	ori	r24, 0x04	; 4
 1c0:	8e b9       	out	0x0e, r24	; 14
	Lcd_Port |= (1<<EN);
 1c2:	8e b1       	in	r24, 0x0e	; 14
 1c4:	88 60       	ori	r24, 0x08	; 8
 1c6:	8e b9       	out	0x0e, r24	; 14
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1c8:	85 e0       	ldi	r24, 0x05	; 5
 1ca:	8a 95       	dec	r24
 1cc:	f1 f7       	brne	.-4      	; 0x1ca <_ZN3LCD5PrintEh+0x1a>
 1ce:	00 00       	nop
	_delay_us(1);
	Lcd_Port &= ~(1<<EN);
 1d0:	8e b1       	in	r24, 0x0e	; 14
 1d2:	87 7f       	andi	r24, 0xF7	; 247
 1d4:	8e b9       	out	0x0e, r24	; 14
 1d6:	8f e1       	ldi	r24, 0x1F	; 31
 1d8:	93 e0       	ldi	r25, 0x03	; 3
 1da:	01 97       	sbiw	r24, 0x01	; 1
 1dc:	f1 f7       	brne	.-4      	; 0x1da <_ZN3LCD5PrintEh+0x2a>
 1de:	00 c0       	rjmp	.+0      	; 0x1e0 <_ZN3LCD5PrintEh+0x30>
 1e0:	00 00       	nop
	
	_delay_us(200);
	
	Lcd_Port = (Lcd_Port & 0x0F) | (Data << 4);
 1e2:	8e b1       	in	r24, 0x0e	; 14
 1e4:	90 e1       	ldi	r25, 0x10	; 16
 1e6:	69 9f       	mul	r22, r25
 1e8:	b0 01       	movw	r22, r0
 1ea:	11 24       	eor	r1, r1
 1ec:	8f 70       	andi	r24, 0x0F	; 15
 1ee:	68 2b       	or	r22, r24
 1f0:	6e b9       	out	0x0e, r22	; 14
	Lcd_Port |= (1<<RS);
 1f2:	8e b1       	in	r24, 0x0e	; 14
 1f4:	84 60       	ori	r24, 0x04	; 4
 1f6:	8e b9       	out	0x0e, r24	; 14
	Lcd_Port |= (1<<EN);
 1f8:	8e b1       	in	r24, 0x0e	; 14
 1fa:	88 60       	ori	r24, 0x08	; 8
 1fc:	8e b9       	out	0x0e, r24	; 14
 1fe:	85 e0       	ldi	r24, 0x05	; 5
 200:	8a 95       	dec	r24
 202:	f1 f7       	brne	.-4      	; 0x200 <_ZN3LCD5PrintEh+0x50>
 204:	00 00       	nop
	_delay_us(1);
	Lcd_Port &= ~(1<<EN);
 206:	8e b1       	in	r24, 0x0e	; 14
 208:	87 7f       	andi	r24, 0xF7	; 247
 20a:	8e b9       	out	0x0e, r24	; 14
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 20c:	8f e3       	ldi	r24, 0x3F	; 63
 20e:	9f e1       	ldi	r25, 0x1F	; 31
 210:	01 97       	sbiw	r24, 0x01	; 1
 212:	f1 f7       	brne	.-4      	; 0x210 <_ZN3LCD5PrintEh+0x60>
 214:	00 c0       	rjmp	.+0      	; 0x216 <_ZN3LCD5PrintEh+0x66>
 216:	00 00       	nop
 218:	08 95       	ret

0000021a <_ZN3LCD10InitializeEv>:
	_delay_ms(2);
}

void LCD::Initialize(void)
{
 21a:	cf 93       	push	r28
 21c:	df 93       	push	r29
 21e:	ec 01       	movw	r28, r24
	Lcd_Direction = 0xFF;
 220:	8f ef       	ldi	r24, 0xFF	; 255
 222:	8d b9       	out	0x0d, r24	; 13
 224:	2f ef       	ldi	r18, 0xFF	; 255
 226:	89 ef       	ldi	r24, 0xF9	; 249
 228:	90 e0       	ldi	r25, 0x00	; 0
 22a:	21 50       	subi	r18, 0x01	; 1
 22c:	80 40       	sbci	r24, 0x00	; 0
 22e:	90 40       	sbci	r25, 0x00	; 0
 230:	e1 f7       	brne	.-8      	; 0x22a <_ZN3LCD10InitializeEv+0x10>
 232:	00 c0       	rjmp	.+0      	; 0x234 <_ZN3LCD10InitializeEv+0x1a>
 234:	00 00       	nop
	_delay_ms(20);
	
	Command(0x02);
 236:	62 e0       	ldi	r22, 0x02	; 2
 238:	ce 01       	movw	r24, r28
 23a:	85 df       	rcall	.-246    	; 0x146 <_ZN3LCD7CommandEh>
	Command(0x28);
 23c:	68 e2       	ldi	r22, 0x28	; 40
 23e:	ce 01       	movw	r24, r28
 240:	82 df       	rcall	.-252    	; 0x146 <_ZN3LCD7CommandEh>
	Command(0x0c);
 242:	6c e0       	ldi	r22, 0x0C	; 12
 244:	ce 01       	movw	r24, r28
 246:	7f df       	rcall	.-258    	; 0x146 <_ZN3LCD7CommandEh>
	Command(0x06);
 248:	66 e0       	ldi	r22, 0x06	; 6
 24a:	ce 01       	movw	r24, r28
 24c:	7c df       	rcall	.-264    	; 0x146 <_ZN3LCD7CommandEh>
	Command(0x01);
 24e:	61 e0       	ldi	r22, 0x01	; 1
 250:	ce 01       	movw	r24, r28
 252:	79 df       	rcall	.-270    	; 0x146 <_ZN3LCD7CommandEh>
 254:	8f e3       	ldi	r24, 0x3F	; 63
 256:	9f e1       	ldi	r25, 0x1F	; 31
 258:	01 97       	sbiw	r24, 0x01	; 1
 25a:	f1 f7       	brne	.-4      	; 0x258 <_ZN3LCD10InitializeEv+0x3e>
 25c:	00 c0       	rjmp	.+0      	; 0x25e <_ZN3LCD10InitializeEv+0x44>
 25e:	00 00       	nop
 260:	df 91       	pop	r29
	_delay_ms(2);
}
 262:	cf 91       	pop	r28
 264:	08 95       	ret

00000266 <_ZN3LCD11PrintStringEPc>:
 266:	ef 92       	push	r14

void LCD::PrintString(char *String)
{
 268:	ff 92       	push	r15
 26a:	0f 93       	push	r16
 26c:	1f 93       	push	r17
 26e:	cf 93       	push	r28
 270:	df 93       	push	r29
 272:	7c 01       	movw	r14, r24
 274:	8b 01       	movw	r16, r22
	for(int i=0; String[i] != 0; i++)
 276:	c0 e0       	ldi	r28, 0x00	; 0
 278:	d0 e0       	ldi	r29, 0x00	; 0
 27a:	f8 01       	movw	r30, r16
 27c:	ec 0f       	add	r30, r28
 27e:	fd 1f       	adc	r31, r29
 280:	60 81       	ld	r22, Z
 282:	66 23       	and	r22, r22
 284:	21 f0       	breq	.+8      	; 0x28e <_ZN3LCD11PrintStringEPc+0x28>
	{
		Print(String[i]);
 286:	c7 01       	movw	r24, r14
 288:	93 df       	rcall	.-218    	; 0x1b0 <_ZN3LCD5PrintEh>
	_delay_ms(2);
}

void LCD::PrintString(char *String)
{
	for(int i=0; String[i] != 0; i++)
 28a:	21 96       	adiw	r28, 0x01	; 1
 28c:	f6 cf       	rjmp	.-20     	; 0x27a <_ZN3LCD11PrintStringEPc+0x14>
	{
		Print(String[i]);
	}
}
 28e:	df 91       	pop	r29
 290:	cf 91       	pop	r28
 292:	1f 91       	pop	r17
 294:	0f 91       	pop	r16
 296:	ff 90       	pop	r15
 298:	ef 90       	pop	r14
 29a:	08 95       	ret

0000029c <_ZN3LCD14PrintString_xyEccPc>:

void LCD::PrintString_xy (char row, char pos, char *Str)
{
 29c:	0f 93       	push	r16
 29e:	1f 93       	push	r17
 2a0:	cf 93       	push	r28
 2a2:	df 93       	push	r29
 2a4:	8c 01       	movw	r16, r24
 2a6:	e9 01       	movw	r28, r18
	if (row == 0 && pos<16)
 2a8:	61 11       	cpse	r22, r1
 2aa:	07 c0       	rjmp	.+14     	; 0x2ba <_ZN3LCD14PrintString_xyEccPc+0x1e>
 2ac:	40 31       	cpi	r20, 0x10	; 16
 2ae:	28 f4       	brcc	.+10     	; 0x2ba <_ZN3LCD14PrintString_xyEccPc+0x1e>
	Command((pos & 0x0F)|0x80);
 2b0:	4f 70       	andi	r20, 0x0F	; 15
 2b2:	64 2f       	mov	r22, r20
 2b4:	60 68       	ori	r22, 0x80	; 128
 2b6:	47 df       	rcall	.-370    	; 0x146 <_ZN3LCD7CommandEh>
 2b8:	09 c0       	rjmp	.+18     	; 0x2cc <_ZN3LCD14PrintString_xyEccPc+0x30>
	else if (row == 1 && pos<16)
 2ba:	61 30       	cpi	r22, 0x01	; 1
 2bc:	39 f4       	brne	.+14     	; 0x2cc <_ZN3LCD14PrintString_xyEccPc+0x30>
 2be:	40 31       	cpi	r20, 0x10	; 16
 2c0:	28 f4       	brcc	.+10     	; 0x2cc <_ZN3LCD14PrintString_xyEccPc+0x30>
	Command((pos & 0x0F)|0xC0);
 2c2:	4f 70       	andi	r20, 0x0F	; 15
 2c4:	64 2f       	mov	r22, r20
 2c6:	60 6c       	ori	r22, 0xC0	; 192
 2c8:	c8 01       	movw	r24, r16
 2ca:	3d df       	rcall	.-390    	; 0x146 <_ZN3LCD7CommandEh>
	PrintString(Str);
 2cc:	be 01       	movw	r22, r28
 2ce:	c8 01       	movw	r24, r16
 2d0:	ca df       	rcall	.-108    	; 0x266 <_ZN3LCD11PrintStringEPc>
}
 2d2:	df 91       	pop	r29
 2d4:	cf 91       	pop	r28
 2d6:	1f 91       	pop	r17
 2d8:	0f 91       	pop	r16
 2da:	08 95       	ret

000002dc <_ZN3LCD5ClearEv>:

void LCD::Clear(void)
{
 2dc:	cf 93       	push	r28
 2de:	df 93       	push	r29
 2e0:	ec 01       	movw	r28, r24
	Command (0x01);
 2e2:	61 e0       	ldi	r22, 0x01	; 1
 2e4:	30 df       	rcall	.-416    	; 0x146 <_ZN3LCD7CommandEh>
 2e6:	8f e3       	ldi	r24, 0x3F	; 63
 2e8:	9f e1       	ldi	r25, 0x1F	; 31
 2ea:	01 97       	sbiw	r24, 0x01	; 1
 2ec:	f1 f7       	brne	.-4      	; 0x2ea <_ZN3LCD5ClearEv+0xe>
 2ee:	00 c0       	rjmp	.+0      	; 0x2f0 <_ZN3LCD5ClearEv+0x14>
 2f0:	00 00       	nop
	_delay_ms(2);		
	Command (0x80);		
 2f2:	60 e8       	ldi	r22, 0x80	; 128
 2f4:	ce 01       	movw	r24, r28
 2f6:	27 df       	rcall	.-434    	; 0x146 <_ZN3LCD7CommandEh>
 2f8:	df 91       	pop	r29
 2fa:	cf 91       	pop	r28
 2fc:	08 95       	ret

000002fe <main>:




int main(void)
{
 2fe:	cf 93       	push	r28
 300:	df 93       	push	r29
 302:	1f 92       	push	r1
 304:	cd b7       	in	r28, 0x3d	; 61
 306:	de b7       	in	r29, 0x3e	; 62
    VoiceRecorder MyRecorder(1);
 308:	61 e0       	ldi	r22, 0x01	; 1
 30a:	70 e0       	ldi	r23, 0x00	; 0
 30c:	ce 01       	movw	r24, r28
 30e:	01 96       	adiw	r24, 0x01	; 1
 310:	32 d0       	rcall	.+100    	; 0x376 <_ZN13VoiceRecorderC1Ei>
	MyRecorder.Start();
 312:	ce 01       	movw	r24, r28
 314:	01 96       	adiw	r24, 0x01	; 1
 316:	8e d0       	rcall	.+284    	; 0x434 <_ZN13VoiceRecorder5StartEv>
	ButtonDirection = 0x00;
 318:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <__TEXT_REGION_LENGTH__+0x7c0101>
	ButtonCommand = 0x00;
 31c:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__TEXT_REGION_LENGTH__+0x7c0100>
    while (1) 
    {
		if (ButtonCommand & (1<< UpButton))
 320:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__TEXT_REGION_LENGTH__+0x7c0100>
 324:	83 ff       	sbrs	r24, 3
 326:	04 c0       	rjmp	.+8      	; 0x330 <main+0x32>
		{
			MyRecorder.Up();
 328:	ce 01       	movw	r24, r28
 32a:	01 96       	adiw	r24, 0x01	; 1
 32c:	19 d2       	rcall	.+1074   	; 0x760 <_ZN13VoiceRecorder2UpEv>
 32e:	f8 cf       	rjmp	.-16     	; 0x320 <main+0x22>
		}
		
		else if (ButtonCommand & (1<< DownButton))
 330:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__TEXT_REGION_LENGTH__+0x7c0100>
 334:	84 ff       	sbrs	r24, 4
		{
			MyRecorder.Down();
 336:	04 c0       	rjmp	.+8      	; 0x340 <main+0x42>
 338:	ce 01       	movw	r24, r28
 33a:	01 96       	adiw	r24, 0x01	; 1
 33c:	11 d3       	rcall	.+1570   	; 0x960 <_ZN13VoiceRecorder4DownEv>
 33e:	f0 cf       	rjmp	.-32     	; 0x320 <main+0x22>
		}
		
		else if (ButtonCommand & (1<< EnterButton))
 340:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__TEXT_REGION_LENGTH__+0x7c0100>
 344:	85 ff       	sbrs	r24, 5
		{
			MyRecorder.Enter();
 346:	04 c0       	rjmp	.+8      	; 0x350 <main+0x52>
 348:	ce 01       	movw	r24, r28
 34a:	01 96       	adiw	r24, 0x01	; 1
 34c:	97 d0       	rcall	.+302    	; 0x47c <_ZN13VoiceRecorder5EnterEv>
 34e:	e8 cf       	rjmp	.-48     	; 0x320 <main+0x22>
		}
		else if (ButtonCommand & (1<< BackButton))
 350:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__TEXT_REGION_LENGTH__+0x7c0100>
 354:	86 ff       	sbrs	r24, 6
		{
			MyRecorder.Back();
 356:	e4 cf       	rjmp	.-56     	; 0x320 <main+0x22>
 358:	ce 01       	movw	r24, r28
 35a:	01 96       	adiw	r24, 0x01	; 1
 35c:	ee d3       	rcall	.+2012   	; 0xb3a <_ZN13VoiceRecorder4BackEv>
 35e:	e0 cf       	rjmp	.-64     	; 0x320 <main+0x22>

00000360 <_Z41__static_initialization_and_destruction_0ii>:
		MenuPosition1(7, "Change Volume", "Change Pitch");
	}
	else if (Position == 16){
		MenuPosition1(3, "Factory Reset", "Record Voice");
	}
 360:	01 97       	sbiw	r24, 0x01	; 1
 362:	41 f4       	brne	.+16     	; 0x374 <_Z41__static_initialization_and_destruction_0ii+0x14>
 364:	6f 3f       	cpi	r22, 0xFF	; 255
 366:	7f 4f       	sbci	r23, 0xFF	; 255
 368:	29 f4       	brne	.+10     	; 0x374 <_Z41__static_initialization_and_destruction_0ii+0x14>
int Volume = 5;
int FileIndex = 0;
int N = 5;
char FileList[][5] = {"AUD1", "AUD2", "AUD3", "AUD4", "AUD5"};

LCD MyLCD(1);
 36a:	61 e0       	ldi	r22, 0x01	; 1
 36c:	70 e0       	ldi	r23, 0x00	; 0
 36e:	8e e1       	ldi	r24, 0x1E	; 30
 370:	93 e0       	ldi	r25, 0x03	; 3
 372:	e8 ce       	rjmp	.-560    	; 0x144 <_ZN3LCDC1Ei>
 374:	08 95       	ret

00000376 <_ZN13VoiceRecorderC1Ei>:

VoiceRecorder::VoiceRecorder(int d){
 376:	08 95       	ret

00000378 <_ZN13VoiceRecorder13MenuPosition1EiPcS0_>:

}
void VoiceRecorder::MenuPosition1(int a, char *Displaytext1, char *Displaytext2)
{
 378:	0f 93       	push	r16
 37a:	1f 93       	push	r17
 37c:	cf 93       	push	r28
 37e:	df 93       	push	r29
 380:	8a 01       	movw	r16, r20
 382:	e9 01       	movw	r28, r18
	Position = a;
 384:	70 93 22 03 	sts	0x0322, r23	; 0x800322 <Position+0x1>
 388:	60 93 21 03 	sts	0x0321, r22	; 0x800321 <Position>
	MyLCD.Clear();
 38c:	8e e1       	ldi	r24, 0x1E	; 30
 38e:	93 e0       	ldi	r25, 0x03	; 3
 390:	a5 df       	rcall	.-182    	; 0x2dc <_ZN3LCD5ClearEv>
	MyLCD.PrintString_xy(0, 0, ">");
 392:	2d e1       	ldi	r18, 0x1D	; 29
 394:	32 e0       	ldi	r19, 0x02	; 2
 396:	40 e0       	ldi	r20, 0x00	; 0
 398:	60 e0       	ldi	r22, 0x00	; 0
 39a:	8e e1       	ldi	r24, 0x1E	; 30
 39c:	93 e0       	ldi	r25, 0x03	; 3
 39e:	7e df       	rcall	.-260    	; 0x29c <_ZN3LCD14PrintString_xyEccPc>
	MyLCD.PrintString_xy(0, 1, Displaytext1);
 3a0:	98 01       	movw	r18, r16
 3a2:	41 e0       	ldi	r20, 0x01	; 1
 3a4:	60 e0       	ldi	r22, 0x00	; 0
 3a6:	8e e1       	ldi	r24, 0x1E	; 30
 3a8:	93 e0       	ldi	r25, 0x03	; 3
 3aa:	78 df       	rcall	.-272    	; 0x29c <_ZN3LCD14PrintString_xyEccPc>
	MyLCD.PrintString_xy(1, 0, Displaytext2);
 3ac:	9e 01       	movw	r18, r28
 3ae:	40 e0       	ldi	r20, 0x00	; 0
 3b0:	61 e0       	ldi	r22, 0x01	; 1
 3b2:	8e e1       	ldi	r24, 0x1E	; 30
 3b4:	93 e0       	ldi	r25, 0x03	; 3
 3b6:	72 df       	rcall	.-284    	; 0x29c <_ZN3LCD14PrintString_xyEccPc>
 3b8:	2f ef       	ldi	r18, 0xFF	; 255
 3ba:	84 e3       	ldi	r24, 0x34	; 52
 3bc:	9c e0       	ldi	r25, 0x0C	; 12
 3be:	21 50       	subi	r18, 0x01	; 1
 3c0:	80 40       	sbci	r24, 0x00	; 0
 3c2:	90 40       	sbci	r25, 0x00	; 0
 3c4:	e1 f7       	brne	.-8      	; 0x3be <_ZN13VoiceRecorder13MenuPosition1EiPcS0_+0x46>
 3c6:	00 c0       	rjmp	.+0      	; 0x3c8 <_ZN13VoiceRecorder13MenuPosition1EiPcS0_+0x50>
 3c8:	00 00       	nop
	_delay_ms(250);
}
 3ca:	df 91       	pop	r29
 3cc:	cf 91       	pop	r28
 3ce:	1f 91       	pop	r17
 3d0:	0f 91       	pop	r16
 3d2:	08 95       	ret

000003d4 <_ZN13VoiceRecorder13MenuPosition2EiiPcS0_>:

void VoiceRecorder::MenuPosition2(int a, int b, char *Displaytext1, char *Displaytext2)
{
 3d4:	ef 92       	push	r14
 3d6:	ff 92       	push	r15
 3d8:	0f 93       	push	r16
 3da:	1f 93       	push	r17
 3dc:	cf 93       	push	r28
 3de:	c4 2f       	mov	r28, r20
 3e0:	79 01       	movw	r14, r18
	Position = a;
 3e2:	70 93 22 03 	sts	0x0322, r23	; 0x800322 <Position+0x1>
 3e6:	60 93 21 03 	sts	0x0321, r22	; 0x800321 <Position>
	MyLCD.Clear();
 3ea:	8e e1       	ldi	r24, 0x1E	; 30
 3ec:	93 e0       	ldi	r25, 0x03	; 3
 3ee:	76 df       	rcall	.-276    	; 0x2dc <_ZN3LCD5ClearEv>
	MyLCD.PrintString_xy(1, 0, ">");
 3f0:	2d e1       	ldi	r18, 0x1D	; 29
 3f2:	32 e0       	ldi	r19, 0x02	; 2
 3f4:	40 e0       	ldi	r20, 0x00	; 0
 3f6:	61 e0       	ldi	r22, 0x01	; 1
 3f8:	8e e1       	ldi	r24, 0x1E	; 30
 3fa:	93 e0       	ldi	r25, 0x03	; 3
 3fc:	4f df       	rcall	.-354    	; 0x29c <_ZN3LCD14PrintString_xyEccPc>
	MyLCD.PrintString_xy(0, b, Displaytext1);
 3fe:	97 01       	movw	r18, r14
 400:	4c 2f       	mov	r20, r28
 402:	60 e0       	ldi	r22, 0x00	; 0
 404:	8e e1       	ldi	r24, 0x1E	; 30
 406:	93 e0       	ldi	r25, 0x03	; 3
 408:	49 df       	rcall	.-366    	; 0x29c <_ZN3LCD14PrintString_xyEccPc>
	MyLCD.PrintString_xy(1, 1, Displaytext2);
 40a:	98 01       	movw	r18, r16
 40c:	41 e0       	ldi	r20, 0x01	; 1
 40e:	61 e0       	ldi	r22, 0x01	; 1
 410:	8e e1       	ldi	r24, 0x1E	; 30
 412:	93 e0       	ldi	r25, 0x03	; 3
 414:	43 df       	rcall	.-378    	; 0x29c <_ZN3LCD14PrintString_xyEccPc>
 416:	2f ef       	ldi	r18, 0xFF	; 255
 418:	84 e3       	ldi	r24, 0x34	; 52
 41a:	9c e0       	ldi	r25, 0x0C	; 12
 41c:	21 50       	subi	r18, 0x01	; 1
 41e:	80 40       	sbci	r24, 0x00	; 0
 420:	90 40       	sbci	r25, 0x00	; 0
 422:	e1 f7       	brne	.-8      	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 424:	00 c0       	rjmp	.+0      	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 426:	00 00       	nop
	_delay_ms(250);
}
 428:	cf 91       	pop	r28
 42a:	1f 91       	pop	r17
 42c:	0f 91       	pop	r16
 42e:	ff 90       	pop	r15
 430:	ef 90       	pop	r14
 432:	08 95       	ret

00000434 <_ZN13VoiceRecorder5StartEv>:

void VoiceRecorder::Start(void)
{
 434:	cf 93       	push	r28
 436:	df 93       	push	r29
 438:	ec 01       	movw	r28, r24
	MyLCD.Initialize();
 43a:	8e e1       	ldi	r24, 0x1E	; 30
 43c:	93 e0       	ldi	r25, 0x03	; 3
 43e:	ed de       	rcall	.-550    	; 0x21a <_ZN3LCD10InitializeEv>
	MyLCD.PrintString_xy(0, 4, "Welcome!");
 440:	2f e1       	ldi	r18, 0x1F	; 31
 442:	32 e0       	ldi	r19, 0x02	; 2
 444:	44 e0       	ldi	r20, 0x04	; 4
 446:	60 e0       	ldi	r22, 0x00	; 0
 448:	8e e1       	ldi	r24, 0x1E	; 30
 44a:	93 e0       	ldi	r25, 0x03	; 3
 44c:	27 df       	rcall	.-434    	; 0x29c <_ZN3LCD14PrintString_xyEccPc>
 44e:	2f ef       	ldi	r18, 0xFF	; 255
 450:	83 ed       	ldi	r24, 0xD3	; 211
 452:	90 e3       	ldi	r25, 0x30	; 48
 454:	21 50       	subi	r18, 0x01	; 1
 456:	80 40       	sbci	r24, 0x00	; 0
 458:	90 40       	sbci	r25, 0x00	; 0
 45a:	e1 f7       	brne	.-8      	; 0x454 <_ZN13VoiceRecorder5StartEv+0x20>
 45c:	00 c0       	rjmp	.+0      	; 0x45e <_ZN13VoiceRecorder5StartEv+0x2a>
 45e:	00 00       	nop
	_delay_ms(1000);
	MyLCD.Clear();
 460:	8e e1       	ldi	r24, 0x1E	; 30
 462:	93 e0       	ldi	r25, 0x03	; 3
 464:	3b df       	rcall	.-394    	; 0x2dc <_ZN3LCD5ClearEv>
	MenuPosition1(1, "Record Voice", "Recordings");
 466:	28 e2       	ldi	r18, 0x28	; 40
 468:	32 e0       	ldi	r19, 0x02	; 2
 46a:	43 e3       	ldi	r20, 0x33	; 51
 46c:	52 e0       	ldi	r21, 0x02	; 2
 46e:	61 e0       	ldi	r22, 0x01	; 1
 470:	70 e0       	ldi	r23, 0x00	; 0
 472:	ce 01       	movw	r24, r28
 474:	81 df       	rcall	.-254    	; 0x378 <_ZN13VoiceRecorder13MenuPosition1EiPcS0_>
}
 476:	df 91       	pop	r29
 478:	cf 91       	pop	r28
 47a:	08 95       	ret

0000047c <_ZN13VoiceRecorder5EnterEv>:

void VoiceRecorder::Enter(void)
{
 47c:	ef 92       	push	r14
 47e:	ff 92       	push	r15
 480:	0f 93       	push	r16
 482:	1f 93       	push	r17
 484:	cf 93       	push	r28
 486:	df 93       	push	r29
 488:	00 d0       	rcall	.+0      	; 0x48a <_ZN13VoiceRecorder5EnterEv+0xe>
 48a:	1f 92       	push	r1
 48c:	cd b7       	in	r28, 0x3d	; 61
 48e:	de b7       	in	r29, 0x3e	; 62
 490:	7c 01       	movw	r14, r24
	if (Position==1){
 492:	80 91 21 03 	lds	r24, 0x0321	; 0x800321 <Position>
 496:	90 91 22 03 	lds	r25, 0x0322	; 0x800322 <Position+0x1>
 49a:	81 30       	cpi	r24, 0x01	; 1
 49c:	91 05       	cpc	r25, r1
 49e:	49 f4       	brne	.+18     	; 0x4b2 <_ZN13VoiceRecorder5EnterEv+0x36>
		MenuPosition1(4, "Start Recording", "");
 4a0:	20 e6       	ldi	r18, 0x60	; 96
 4a2:	32 e0       	ldi	r19, 0x02	; 2
 4a4:	40 e4       	ldi	r20, 0x40	; 64
 4a6:	52 e0       	ldi	r21, 0x02	; 2
 4a8:	64 e0       	ldi	r22, 0x04	; 4
 4aa:	70 e0       	ldi	r23, 0x00	; 0
 4ac:	c7 01       	movw	r24, r14
 4ae:	64 df       	rcall	.-312    	; 0x378 <_ZN13VoiceRecorder13MenuPosition1EiPcS0_>
 4b0:	4c c1       	rjmp	.+664    	; 0x74a <_ZN13VoiceRecorder5EnterEv+0x2ce>
	}
	else if (Position==2){
 4b2:	82 30       	cpi	r24, 0x02	; 2
 4b4:	91 05       	cpc	r25, r1
 4b6:	f1 f4       	brne	.+60     	; 0x4f4 <_ZN13VoiceRecorder5EnterEv+0x78>
        MenuPosition1(17, FileList[FileIndex], FileList[FileIndex + 1]);
 4b8:	80 91 1f 03 	lds	r24, 0x031F	; 0x80031f <FileIndex>
 4bc:	90 91 20 03 	lds	r25, 0x0320	; 0x800320 <FileIndex+0x1>
 4c0:	9c 01       	movw	r18, r24
 4c2:	2f 5f       	subi	r18, 0xFF	; 255
 4c4:	3f 4f       	sbci	r19, 0xFF	; 255
 4c6:	a9 01       	movw	r20, r18
 4c8:	44 0f       	add	r20, r20
 4ca:	55 1f       	adc	r21, r21
 4cc:	44 0f       	add	r20, r20
 4ce:	55 1f       	adc	r21, r21
 4d0:	24 0f       	add	r18, r20
 4d2:	35 1f       	adc	r19, r21
 4d4:	20 50       	subi	r18, 0x00	; 0
 4d6:	3e 4f       	sbci	r19, 0xFE	; 254
 4d8:	ac 01       	movw	r20, r24
 4da:	44 0f       	add	r20, r20
 4dc:	55 1f       	adc	r21, r21
 4de:	44 0f       	add	r20, r20
 4e0:	55 1f       	adc	r21, r21
 4e2:	48 0f       	add	r20, r24
 4e4:	59 1f       	adc	r21, r25
 4e6:	40 50       	subi	r20, 0x00	; 0
 4e8:	5e 4f       	sbci	r21, 0xFE	; 254
 4ea:	61 e1       	ldi	r22, 0x11	; 17
 4ec:	70 e0       	ldi	r23, 0x00	; 0
 4ee:	c7 01       	movw	r24, r14
 4f0:	43 df       	rcall	.-378    	; 0x378 <_ZN13VoiceRecorder13MenuPosition1EiPcS0_>
 4f2:	2b c1       	rjmp	.+598    	; 0x74a <_ZN13VoiceRecorder5EnterEv+0x2ce>
    }
	else if (Position == 3){
 4f4:	83 30       	cpi	r24, 0x03	; 3
 4f6:	91 05       	cpc	r25, r1
 4f8:	09 f5       	brne	.+66     	; 0x53c <_ZN13VoiceRecorder5EnterEv+0xc0>
		MyLCD.Clear();
 4fa:	8e e1       	ldi	r24, 0x1E	; 30
 4fc:	93 e0       	ldi	r25, 0x03	; 3
 4fe:	ee de       	rcall	.-548    	; 0x2dc <_ZN3LCD5ClearEv>
		MyLCD.PrintString_xy(0, 0, "Confirm factory ");
 500:	20 e5       	ldi	r18, 0x50	; 80
 502:	32 e0       	ldi	r19, 0x02	; 2
 504:	40 e0       	ldi	r20, 0x00	; 0
 506:	60 e0       	ldi	r22, 0x00	; 0
 508:	8e e1       	ldi	r24, 0x1E	; 30
 50a:	93 e0       	ldi	r25, 0x03	; 3
 50c:	c7 de       	rcall	.-626    	; 0x29c <_ZN3LCD14PrintString_xyEccPc>
		MyLCD.PrintString_xy(1, 0, "reset ?");
 50e:	21 e6       	ldi	r18, 0x61	; 97
 510:	32 e0       	ldi	r19, 0x02	; 2
 512:	40 e0       	ldi	r20, 0x00	; 0
 514:	61 e0       	ldi	r22, 0x01	; 1
 516:	8e e1       	ldi	r24, 0x1E	; 30
 518:	93 e0       	ldi	r25, 0x03	; 3
 51a:	c0 de       	rcall	.-640    	; 0x29c <_ZN3LCD14PrintString_xyEccPc>
		Position = 16;
 51c:	80 e1       	ldi	r24, 0x10	; 16
 51e:	90 e0       	ldi	r25, 0x00	; 0
 520:	90 93 22 03 	sts	0x0322, r25	; 0x800322 <Position+0x1>
 524:	80 93 21 03 	sts	0x0321, r24	; 0x800321 <Position>
 528:	2f ef       	ldi	r18, 0xFF	; 255
 52a:	8e e9       	ldi	r24, 0x9E	; 158
 52c:	94 e2       	ldi	r25, 0x24	; 36
 52e:	21 50       	subi	r18, 0x01	; 1
 530:	80 40       	sbci	r24, 0x00	; 0
 532:	90 40       	sbci	r25, 0x00	; 0
 534:	e1 f7       	brne	.-8      	; 0x52e <_ZN13VoiceRecorder5EnterEv+0xb2>
 536:	00 c0       	rjmp	.+0      	; 0x538 <_ZN13VoiceRecorder5EnterEv+0xbc>
 538:	00 00       	nop
 53a:	07 c1       	rjmp	.+526    	; 0x74a <_ZN13VoiceRecorder5EnterEv+0x2ce>
		_delay_ms(750);
	}
    else if (Position==4){
 53c:	84 30       	cpi	r24, 0x04	; 4
 53e:	91 05       	cpc	r25, r1
 540:	59 f4       	brne	.+22     	; 0x558 <_ZN13VoiceRecorder5EnterEv+0xdc>
        //startRecording();
		MenuPosition2(5, 2,"Recording...", "Stop Recording");
 542:	09 e6       	ldi	r16, 0x69	; 105
 544:	12 e0       	ldi	r17, 0x02	; 2
 546:	28 e7       	ldi	r18, 0x78	; 120
 548:	32 e0       	ldi	r19, 0x02	; 2
 54a:	42 e0       	ldi	r20, 0x02	; 2
 54c:	50 e0       	ldi	r21, 0x00	; 0
 54e:	65 e0       	ldi	r22, 0x05	; 5
 550:	70 e0       	ldi	r23, 0x00	; 0
 552:	c7 01       	movw	r24, r14
 554:	3f df       	rcall	.-386    	; 0x3d4 <_ZN13VoiceRecorder13MenuPosition2EiiPcS0_>
 556:	f9 c0       	rjmp	.+498    	; 0x74a <_ZN13VoiceRecorder5EnterEv+0x2ce>
    }
	else if (Position==5){
 558:	85 30       	cpi	r24, 0x05	; 5
 55a:	91 05       	cpc	r25, r1
 55c:	49 f4       	brne	.+18     	; 0x570 <_ZN13VoiceRecorder5EnterEv+0xf4>
		//stopRecording();
		MenuPosition1(1, "Record Voice", "Recordings");
 55e:	28 e2       	ldi	r18, 0x28	; 40
 560:	32 e0       	ldi	r19, 0x02	; 2
 562:	43 e3       	ldi	r20, 0x33	; 51
 564:	52 e0       	ldi	r21, 0x02	; 2
 566:	61 e0       	ldi	r22, 0x01	; 1
 568:	70 e0       	ldi	r23, 0x00	; 0
 56a:	c7 01       	movw	r24, r14
 56c:	05 df       	rcall	.-502    	; 0x378 <_ZN13VoiceRecorder13MenuPosition1EiPcS0_>
	}
    else if (Position==11){
 56e:	ed c0       	rjmp	.+474    	; 0x74a <_ZN13VoiceRecorder5EnterEv+0x2ce>
 570:	8b 30       	cpi	r24, 0x0B	; 11
 572:	91 05       	cpc	r25, r1
        //deleteRecording(nameList[_FileIndex]);
        MyLCD.Clear();
 574:	a1 f4       	brne	.+40     	; 0x59e <_ZN13VoiceRecorder5EnterEv+0x122>
 576:	8e e1       	ldi	r24, 0x1E	; 30
 578:	93 e0       	ldi	r25, 0x03	; 3
 57a:	b0 de       	rcall	.-672    	; 0x2dc <_ZN3LCD5ClearEv>
 57c:	2f ef       	ldi	r18, 0xFF	; 255
 57e:	83 ed       	ldi	r24, 0xD3	; 211
 580:	90 e3       	ldi	r25, 0x30	; 48
 582:	21 50       	subi	r18, 0x01	; 1
 584:	80 40       	sbci	r24, 0x00	; 0
 586:	90 40       	sbci	r25, 0x00	; 0
 588:	e1 f7       	brne	.-8      	; 0x582 <_ZN13VoiceRecorder5EnterEv+0x106>
 58a:	00 c0       	rjmp	.+0      	; 0x58c <_ZN13VoiceRecorder5EnterEv+0x110>
        _FileIndex = 0;
        for (int i = 0; i<100; i++){
            nameList[i] = "";
        }*/
        _delay_ms(1000);
        MenuPosition1(17, "", "");
 58c:	00 00       	nop
 58e:	20 e6       	ldi	r18, 0x60	; 96
 590:	32 e0       	ldi	r19, 0x02	; 2
 592:	a9 01       	movw	r20, r18
 594:	61 e1       	ldi	r22, 0x11	; 17
 596:	70 e0       	ldi	r23, 0x00	; 0
 598:	c7 01       	movw	r24, r14
 59a:	ee de       	rcall	.-548    	; 0x378 <_ZN13VoiceRecorder13MenuPosition1EiPcS0_>
 59c:	d6 c0       	rjmp	.+428    	; 0x74a <_ZN13VoiceRecorder5EnterEv+0x2ce>
    }

    else if (Position==6){
 59e:	86 30       	cpi	r24, 0x06	; 6
 5a0:	91 05       	cpc	r25, r1
 5a2:	59 f4       	brne	.+22     	; 0x5ba <_ZN13VoiceRecorder5EnterEv+0x13e>
        //startPlayback(nameList[_FileIndex]);
		//_delay_ms(1000);
		MenuPosition2(14, 3, "Playing...", "Stop");
 5a4:	05 e8       	ldi	r16, 0x85	; 133
 5a6:	12 e0       	ldi	r17, 0x02	; 2
 5a8:	2a e8       	ldi	r18, 0x8A	; 138
 5aa:	32 e0       	ldi	r19, 0x02	; 2
 5ac:	43 e0       	ldi	r20, 0x03	; 3
 5ae:	50 e0       	ldi	r21, 0x00	; 0
 5b0:	6e e0       	ldi	r22, 0x0E	; 14
 5b2:	70 e0       	ldi	r23, 0x00	; 0
 5b4:	c7 01       	movw	r24, r14
 5b6:	0e df       	rcall	.-484    	; 0x3d4 <_ZN13VoiceRecorder13MenuPosition2EiiPcS0_>
    }
    else if (Position==7){
 5b8:	c8 c0       	rjmp	.+400    	; 0x74a <_ZN13VoiceRecorder5EnterEv+0x2ce>
 5ba:	87 30       	cpi	r24, 0x07	; 7
        MyLCD.Clear();
 5bc:	91 05       	cpc	r25, r1
 5be:	59 f5       	brne	.+86     	; 0x616 <_ZN13VoiceRecorder5EnterEv+0x19a>
 5c0:	8e e1       	ldi	r24, 0x1E	; 30
 5c2:	93 e0       	ldi	r25, 0x03	; 3
		MyLCD.PrintString_xy(0, 5, "Volume");
 5c4:	8b de       	rcall	.-746    	; 0x2dc <_ZN3LCD5ClearEv>
 5c6:	2e eb       	ldi	r18, 0xBE	; 190
 5c8:	32 e0       	ldi	r19, 0x02	; 2
 5ca:	45 e0       	ldi	r20, 0x05	; 5
 5cc:	60 e0       	ldi	r22, 0x00	; 0
 5ce:	8e e1       	ldi	r24, 0x1E	; 30
 5d0:	93 e0       	ldi	r25, 0x03	; 3
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
 5d2:	64 de       	rcall	.-824    	; 0x29c <_ZN3LCD14PrintString_xyEccPc>
 5d4:	4a e0       	ldi	r20, 0x0A	; 10
 5d6:	be 01       	movw	r22, r28
 5d8:	6f 5f       	subi	r22, 0xFF	; 255
 5da:	7f 4f       	sbci	r23, 0xFF	; 255
 5dc:	80 91 1b 02 	lds	r24, 0x021B	; 0x80021b <Volume>
 5e0:	90 91 1c 02 	lds	r25, 0x021C	; 0x80021c <Volume+0x1>
		char List[4];
		itoa(Volume,List,10);
		MyLCD.PrintString_xy(1, 7, List);
 5e4:	2a d3       	rcall	.+1620   	; 0xc3a <__itoa_ncheck>
 5e6:	9e 01       	movw	r18, r28
 5e8:	2f 5f       	subi	r18, 0xFF	; 255
 5ea:	3f 4f       	sbci	r19, 0xFF	; 255
 5ec:	47 e0       	ldi	r20, 0x07	; 7
 5ee:	61 e0       	ldi	r22, 0x01	; 1
 5f0:	8e e1       	ldi	r24, 0x1E	; 30
 5f2:	93 e0       	ldi	r25, 0x03	; 3
 5f4:	53 de       	rcall	.-858    	; 0x29c <_ZN3LCD14PrintString_xyEccPc>
		Position = 15;
 5f6:	8f e0       	ldi	r24, 0x0F	; 15
 5f8:	90 e0       	ldi	r25, 0x00	; 0
 5fa:	90 93 22 03 	sts	0x0322, r25	; 0x800322 <Position+0x1>
 5fe:	80 93 21 03 	sts	0x0321, r24	; 0x800321 <Position>
 602:	2f ef       	ldi	r18, 0xFF	; 255
 604:	89 e6       	ldi	r24, 0x69	; 105
 606:	98 e1       	ldi	r25, 0x18	; 24
 608:	21 50       	subi	r18, 0x01	; 1
 60a:	80 40       	sbci	r24, 0x00	; 0
 60c:	90 40       	sbci	r25, 0x00	; 0
 60e:	e1 f7       	brne	.-8      	; 0x608 <_ZN13VoiceRecorder5EnterEv+0x18c>
 610:	00 c0       	rjmp	.+0      	; 0x612 <_ZN13VoiceRecorder5EnterEv+0x196>
 612:	00 00       	nop
		_delay_ms(500);
    }
    else if (Position == 8){
 614:	9a c0       	rjmp	.+308    	; 0x74a <_ZN13VoiceRecorder5EnterEv+0x2ce>
 616:	88 30       	cpi	r24, 0x08	; 8
 618:	91 05       	cpc	r25, r1
        MenuPosition1(12, "High Pitch", "Low Pitch");
 61a:	49 f4       	brne	.+18     	; 0x62e <_ZN13VoiceRecorder5EnterEv+0x1b2>
 61c:	25 e9       	ldi	r18, 0x95	; 149
 61e:	32 e0       	ldi	r19, 0x02	; 2
 620:	4f e9       	ldi	r20, 0x9F	; 159
 622:	52 e0       	ldi	r21, 0x02	; 2
 624:	6c e0       	ldi	r22, 0x0C	; 12
 626:	70 e0       	ldi	r23, 0x00	; 0
 628:	c7 01       	movw	r24, r14
 62a:	a6 de       	rcall	.-692    	; 0x378 <_ZN13VoiceRecorder13MenuPosition1EiPcS0_>
    }
	else if (Position == 9){
 62c:	8e c0       	rjmp	.+284    	; 0x74a <_ZN13VoiceRecorder5EnterEv+0x2ce>
 62e:	89 30       	cpi	r24, 0x09	; 9
 630:	91 05       	cpc	r25, r1
		//echofunction();
		//_delay_ms(1000);
		MenuPosition2(14, 3, "Playing...", "Stop");
 632:	59 f4       	brne	.+22     	; 0x64a <_ZN13VoiceRecorder5EnterEv+0x1ce>
 634:	05 e8       	ldi	r16, 0x85	; 133
 636:	12 e0       	ldi	r17, 0x02	; 2
 638:	2a e8       	ldi	r18, 0x8A	; 138
 63a:	32 e0       	ldi	r19, 0x02	; 2
 63c:	43 e0       	ldi	r20, 0x03	; 3
 63e:	50 e0       	ldi	r21, 0x00	; 0
 640:	6e e0       	ldi	r22, 0x0E	; 14
 642:	70 e0       	ldi	r23, 0x00	; 0
 644:	c7 01       	movw	r24, r14
 646:	c6 de       	rcall	.-628    	; 0x3d4 <_ZN13VoiceRecorder13MenuPosition2EiiPcS0_>
	}
	else if (Position == 10){
 648:	80 c0       	rjmp	.+256    	; 0x74a <_ZN13VoiceRecorder5EnterEv+0x2ce>
 64a:	8a 30       	cpi	r24, 0x0A	; 10
 64c:	91 05       	cpc	r25, r1
		//echofunction();
		//_delay_ms(1000);
		MenuPosition2(14, 3, "Playing...", "Stop");
 64e:	59 f4       	brne	.+22     	; 0x666 <_ZN13VoiceRecorder5EnterEv+0x1ea>
 650:	05 e8       	ldi	r16, 0x85	; 133
 652:	12 e0       	ldi	r17, 0x02	; 2
 654:	2a e8       	ldi	r18, 0x8A	; 138
 656:	32 e0       	ldi	r19, 0x02	; 2
 658:	43 e0       	ldi	r20, 0x03	; 3
 65a:	50 e0       	ldi	r21, 0x00	; 0
 65c:	6e e0       	ldi	r22, 0x0E	; 14
 65e:	70 e0       	ldi	r23, 0x00	; 0
 660:	c7 01       	movw	r24, r14
 662:	b8 de       	rcall	.-656    	; 0x3d4 <_ZN13VoiceRecorder13MenuPosition2EiiPcS0_>
	}
    else if (Position == 12){
 664:	72 c0       	rjmp	.+228    	; 0x74a <_ZN13VoiceRecorder5EnterEv+0x2ce>
 666:	8c 30       	cpi	r24, 0x0C	; 12
 668:	91 05       	cpc	r25, r1
        //freq_shift(nameList[_FileIndex], 1500);
		//_delay_ms(1000);
        MenuPosition2(14, 3, "Playing...", "Stop");
 66a:	59 f4       	brne	.+22     	; 0x682 <_ZN13VoiceRecorder5EnterEv+0x206>
 66c:	05 e8       	ldi	r16, 0x85	; 133
 66e:	12 e0       	ldi	r17, 0x02	; 2
 670:	2a e8       	ldi	r18, 0x8A	; 138
 672:	32 e0       	ldi	r19, 0x02	; 2
 674:	43 e0       	ldi	r20, 0x03	; 3
 676:	50 e0       	ldi	r21, 0x00	; 0
 678:	6e e0       	ldi	r22, 0x0E	; 14
 67a:	70 e0       	ldi	r23, 0x00	; 0
 67c:	c7 01       	movw	r24, r14
 67e:	aa de       	rcall	.-684    	; 0x3d4 <_ZN13VoiceRecorder13MenuPosition2EiiPcS0_>
    }
    else if (Position == 13){
 680:	64 c0       	rjmp	.+200    	; 0x74a <_ZN13VoiceRecorder5EnterEv+0x2ce>
 682:	8d 30       	cpi	r24, 0x0D	; 13
 684:	91 05       	cpc	r25, r1
        //freq_shift(nameList[_FileIndex], 1500);
		//_delay_ms(1000);
		MenuPosition2(14, 3, "Playing...", "Stop");
 686:	59 f4       	brne	.+22     	; 0x69e <_ZN13VoiceRecorder5EnterEv+0x222>
 688:	05 e8       	ldi	r16, 0x85	; 133
 68a:	12 e0       	ldi	r17, 0x02	; 2
 68c:	2a e8       	ldi	r18, 0x8A	; 138
 68e:	32 e0       	ldi	r19, 0x02	; 2
 690:	43 e0       	ldi	r20, 0x03	; 3
 692:	50 e0       	ldi	r21, 0x00	; 0
 694:	6e e0       	ldi	r22, 0x0E	; 14
 696:	70 e0       	ldi	r23, 0x00	; 0
 698:	c7 01       	movw	r24, r14
 69a:	9c de       	rcall	.-712    	; 0x3d4 <_ZN13VoiceRecorder13MenuPosition2EiiPcS0_>
 69c:	56 c0       	rjmp	.+172    	; 0x74a <_ZN13VoiceRecorder5EnterEv+0x2ce>
    }
	else if (Position==14){
 69e:	8e 30       	cpi	r24, 0x0E	; 14
 6a0:	91 05       	cpc	r25, r1
 6a2:	f1 f4       	brne	.+60     	; 0x6e0 <_ZN13VoiceRecorder5EnterEv+0x264>
		//stopPlayback(nameList[_FileIndex]);
		//_delay_ms(1000);
		MenuPosition1(17, FileList[FileIndex], FileList[FileIndex + 1]);
 6a4:	80 91 1f 03 	lds	r24, 0x031F	; 0x80031f <FileIndex>
 6a8:	90 91 20 03 	lds	r25, 0x0320	; 0x800320 <FileIndex+0x1>
 6ac:	9c 01       	movw	r18, r24
 6ae:	2f 5f       	subi	r18, 0xFF	; 255
 6b0:	3f 4f       	sbci	r19, 0xFF	; 255
 6b2:	a9 01       	movw	r20, r18
 6b4:	44 0f       	add	r20, r20
 6b6:	55 1f       	adc	r21, r21
 6b8:	44 0f       	add	r20, r20
 6ba:	55 1f       	adc	r21, r21
 6bc:	24 0f       	add	r18, r20
 6be:	35 1f       	adc	r19, r21
 6c0:	20 50       	subi	r18, 0x00	; 0
 6c2:	3e 4f       	sbci	r19, 0xFE	; 254
 6c4:	ac 01       	movw	r20, r24
 6c6:	44 0f       	add	r20, r20
 6c8:	55 1f       	adc	r21, r21
 6ca:	44 0f       	add	r20, r20
 6cc:	55 1f       	adc	r21, r21
 6ce:	48 0f       	add	r20, r24
 6d0:	59 1f       	adc	r21, r25
 6d2:	40 50       	subi	r20, 0x00	; 0
 6d4:	5e 4f       	sbci	r21, 0xFE	; 254
 6d6:	61 e1       	ldi	r22, 0x11	; 17
 6d8:	70 e0       	ldi	r23, 0x00	; 0
 6da:	c7 01       	movw	r24, r14
	}
	else if (Position == 15){
 6dc:	4d de       	rcall	.-870    	; 0x378 <_ZN13VoiceRecorder13MenuPosition1EiPcS0_>
 6de:	35 c0       	rjmp	.+106    	; 0x74a <_ZN13VoiceRecorder5EnterEv+0x2ce>
 6e0:	8f 30       	cpi	r24, 0x0F	; 15
		 MenuPosition1(7, "Change Volume", "Change Pitch");
 6e2:	91 05       	cpc	r25, r1
 6e4:	49 f4       	brne	.+18     	; 0x6f8 <_ZN13VoiceRecorder5EnterEv+0x27c>
 6e6:	2a ea       	ldi	r18, 0xAA	; 170
 6e8:	32 e0       	ldi	r19, 0x02	; 2
 6ea:	47 eb       	ldi	r20, 0xB7	; 183
 6ec:	52 e0       	ldi	r21, 0x02	; 2
 6ee:	67 e0       	ldi	r22, 0x07	; 7
 6f0:	70 e0       	ldi	r23, 0x00	; 0
 6f2:	c7 01       	movw	r24, r14
	}
	else if (Position == 16){
 6f4:	41 de       	rcall	.-894    	; 0x378 <_ZN13VoiceRecorder13MenuPosition1EiPcS0_>
 6f6:	29 c0       	rjmp	.+82     	; 0x74a <_ZN13VoiceRecorder5EnterEv+0x2ce>
 6f8:	80 31       	cpi	r24, 0x10	; 16
		 //reset()
		 MyLCD.Clear();
 6fa:	91 05       	cpc	r25, r1
 6fc:	e1 f4       	brne	.+56     	; 0x736 <_ZN13VoiceRecorder5EnterEv+0x2ba>
 6fe:	8e e1       	ldi	r24, 0x1E	; 30
 700:	93 e0       	ldi	r25, 0x03	; 3
		 MyLCD.PrintString_xy(0, 0, "Reseting Success");
 702:	ec dd       	rcall	.-1064   	; 0x2dc <_ZN3LCD5ClearEv>
 704:	25 ec       	ldi	r18, 0xC5	; 197
 706:	32 e0       	ldi	r19, 0x02	; 2
 708:	40 e0       	ldi	r20, 0x00	; 0
 70a:	60 e0       	ldi	r22, 0x00	; 0
 70c:	8e e1       	ldi	r24, 0x1E	; 30
 70e:	93 e0       	ldi	r25, 0x03	; 3
 710:	c5 dd       	rcall	.-1142   	; 0x29c <_ZN3LCD14PrintString_xyEccPc>
 712:	2f ef       	ldi	r18, 0xFF	; 255
 714:	8e e9       	ldi	r24, 0x9E	; 158
 716:	94 e2       	ldi	r25, 0x24	; 36
 718:	21 50       	subi	r18, 0x01	; 1
 71a:	80 40       	sbci	r24, 0x00	; 0
 71c:	90 40       	sbci	r25, 0x00	; 0
 71e:	e1 f7       	brne	.-8      	; 0x718 <_ZN13VoiceRecorder5EnterEv+0x29c>
		 _delay_ms(750);
		 MenuPosition1(1, "Record Voice", "Recordings");
 720:	00 c0       	rjmp	.+0      	; 0x722 <_ZN13VoiceRecorder5EnterEv+0x2a6>
 722:	00 00       	nop
 724:	28 e2       	ldi	r18, 0x28	; 40
 726:	32 e0       	ldi	r19, 0x02	; 2
 728:	43 e3       	ldi	r20, 0x33	; 51
 72a:	52 e0       	ldi	r21, 0x02	; 2
 72c:	61 e0       	ldi	r22, 0x01	; 1
 72e:	70 e0       	ldi	r23, 0x00	; 0
 730:	c7 01       	movw	r24, r14
 732:	22 de       	rcall	.-956    	; 0x378 <_ZN13VoiceRecorder13MenuPosition1EiPcS0_>
	}
	else if (Position>=17){
 734:	0a c0       	rjmp	.+20     	; 0x74a <_ZN13VoiceRecorder5EnterEv+0x2ce>
 736:	41 97       	sbiw	r24, 0x11	; 17
		MenuPosition1(6, "Play Recording", "Change Volume");
 738:	44 f0       	brlt	.+16     	; 0x74a <_ZN13VoiceRecorder5EnterEv+0x2ce>
 73a:	27 eb       	ldi	r18, 0xB7	; 183
 73c:	32 e0       	ldi	r19, 0x02	; 2
 73e:	46 ed       	ldi	r20, 0xD6	; 214
 740:	52 e0       	ldi	r21, 0x02	; 2
 742:	66 e0       	ldi	r22, 0x06	; 6
 744:	70 e0       	ldi	r23, 0x00	; 0
 746:	c7 01       	movw	r24, r14
 748:	17 de       	rcall	.-978    	; 0x378 <_ZN13VoiceRecorder13MenuPosition1EiPcS0_>
	}
}
 74a:	0f 90       	pop	r0
 74c:	0f 90       	pop	r0
 74e:	0f 90       	pop	r0
 750:	0f 90       	pop	r0
 752:	df 91       	pop	r29
 754:	cf 91       	pop	r28
 756:	1f 91       	pop	r17
 758:	0f 91       	pop	r16
 75a:	ff 90       	pop	r15
 75c:	ef 90       	pop	r14
 75e:	08 95       	ret

00000760 <_ZN13VoiceRecorder2UpEv>:

void VoiceRecorder::Up(void)
{
 760:	cf 93       	push	r28
 762:	df 93       	push	r29
 764:	00 d0       	rcall	.+0      	; 0x766 <_ZN13VoiceRecorder2UpEv+0x6>
 766:	1f 92       	push	r1
 768:	cd b7       	in	r28, 0x3d	; 61
 76a:	de b7       	in	r29, 0x3e	; 62
	if (Position == 1)
 76c:	60 91 21 03 	lds	r22, 0x0321	; 0x800321 <Position>
 770:	70 91 22 03 	lds	r23, 0x0322	; 0x800322 <Position+0x1>
 774:	61 30       	cpi	r22, 0x01	; 1
 776:	71 05       	cpc	r23, r1
 778:	41 f4       	brne	.+16     	; 0x78a <_ZN13VoiceRecorder2UpEv+0x2a>
	{
		MenuPosition1(3, "Factory Reset", "Record Voice");
 77a:	23 e3       	ldi	r18, 0x33	; 51
 77c:	32 e0       	ldi	r19, 0x02	; 2
 77e:	45 ee       	ldi	r20, 0xE5	; 229
 780:	52 e0       	ldi	r21, 0x02	; 2
 782:	63 e0       	ldi	r22, 0x03	; 3
 784:	70 e0       	ldi	r23, 0x00	; 0
 786:	f8 dd       	rcall	.-1040   	; 0x378 <_ZN13VoiceRecorder13MenuPosition1EiPcS0_>
 788:	e4 c0       	rjmp	.+456    	; 0x952 <_ZN13VoiceRecorder2UpEv+0x1f2>
	}
	else if (Position == 2)
 78a:	62 30       	cpi	r22, 0x02	; 2
 78c:	71 05       	cpc	r23, r1
 78e:	41 f4       	brne	.+16     	; 0x7a0 <_ZN13VoiceRecorder2UpEv+0x40>
	{
		MenuPosition1(1, "Record Voice", "Recordings");
 790:	28 e2       	ldi	r18, 0x28	; 40
 792:	32 e0       	ldi	r19, 0x02	; 2
 794:	43 e3       	ldi	r20, 0x33	; 51
 796:	52 e0       	ldi	r21, 0x02	; 2
 798:	61 e0       	ldi	r22, 0x01	; 1
 79a:	70 e0       	ldi	r23, 0x00	; 0
 79c:	ed dd       	rcall	.-1062   	; 0x378 <_ZN13VoiceRecorder13MenuPosition1EiPcS0_>
 79e:	d9 c0       	rjmp	.+434    	; 0x952 <_ZN13VoiceRecorder2UpEv+0x1f2>
	}
	else if (Position == 3)
 7a0:	63 30       	cpi	r22, 0x03	; 3
 7a2:	71 05       	cpc	r23, r1
 7a4:	41 f4       	brne	.+16     	; 0x7b6 <_ZN13VoiceRecorder2UpEv+0x56>
	{
		MenuPosition1(2, "Recordings", "Factory Reset");
 7a6:	25 ee       	ldi	r18, 0xE5	; 229
 7a8:	32 e0       	ldi	r19, 0x02	; 2
 7aa:	48 e2       	ldi	r20, 0x28	; 40
 7ac:	52 e0       	ldi	r21, 0x02	; 2
 7ae:	62 e0       	ldi	r22, 0x02	; 2
 7b0:	70 e0       	ldi	r23, 0x00	; 0
 7b2:	e2 dd       	rcall	.-1084   	; 0x378 <_ZN13VoiceRecorder13MenuPosition1EiPcS0_>
 7b4:	ce c0       	rjmp	.+412    	; 0x952 <_ZN13VoiceRecorder2UpEv+0x1f2>
	}
	else if (Position == 4)
 7b6:	64 30       	cpi	r22, 0x04	; 4
 7b8:	71 05       	cpc	r23, r1
 7ba:	41 f4       	brne	.+16     	; 0x7cc <_ZN13VoiceRecorder2UpEv+0x6c>
	{
		MenuPosition1(4, "Start Recording", "");
 7bc:	20 e6       	ldi	r18, 0x60	; 96
 7be:	32 e0       	ldi	r19, 0x02	; 2
 7c0:	40 e4       	ldi	r20, 0x40	; 64
 7c2:	52 e0       	ldi	r21, 0x02	; 2
 7c4:	64 e0       	ldi	r22, 0x04	; 4
 7c6:	70 e0       	ldi	r23, 0x00	; 0
 7c8:	d7 dd       	rcall	.-1106   	; 0x378 <_ZN13VoiceRecorder13MenuPosition1EiPcS0_>
 7ca:	c3 c0       	rjmp	.+390    	; 0x952 <_ZN13VoiceRecorder2UpEv+0x1f2>
	}
	else if (Position == 7)
 7cc:	67 30       	cpi	r22, 0x07	; 7
 7ce:	71 05       	cpc	r23, r1
 7d0:	41 f4       	brne	.+16     	; 0x7e2 <_ZN13VoiceRecorder2UpEv+0x82>
	{
		MenuPosition1(6, "Play Recording", "Change Volume");
 7d2:	27 eb       	ldi	r18, 0xB7	; 183
 7d4:	32 e0       	ldi	r19, 0x02	; 2
 7d6:	46 ed       	ldi	r20, 0xD6	; 214
 7d8:	52 e0       	ldi	r21, 0x02	; 2
 7da:	66 e0       	ldi	r22, 0x06	; 6
 7dc:	70 e0       	ldi	r23, 0x00	; 0
 7de:	cc dd       	rcall	.-1128   	; 0x378 <_ZN13VoiceRecorder13MenuPosition1EiPcS0_>
 7e0:	b8 c0       	rjmp	.+368    	; 0x952 <_ZN13VoiceRecorder2UpEv+0x1f2>
	}
	else if (Position == 8)
 7e2:	68 30       	cpi	r22, 0x08	; 8
 7e4:	71 05       	cpc	r23, r1
 7e6:	41 f4       	brne	.+16     	; 0x7f8 <_ZN13VoiceRecorder2UpEv+0x98>
	{
		MenuPosition1(7, "Change Volume", "Change Pitch");
 7e8:	2a ea       	ldi	r18, 0xAA	; 170
 7ea:	32 e0       	ldi	r19, 0x02	; 2
 7ec:	47 eb       	ldi	r20, 0xB7	; 183
 7ee:	52 e0       	ldi	r21, 0x02	; 2
 7f0:	67 e0       	ldi	r22, 0x07	; 7
 7f2:	70 e0       	ldi	r23, 0x00	; 0
 7f4:	c1 dd       	rcall	.-1150   	; 0x378 <_ZN13VoiceRecorder13MenuPosition1EiPcS0_>
 7f6:	ad c0       	rjmp	.+346    	; 0x952 <_ZN13VoiceRecorder2UpEv+0x1f2>
	}
	else if (Position == 9)
 7f8:	69 30       	cpi	r22, 0x09	; 9
 7fa:	71 05       	cpc	r23, r1
 7fc:	41 f4       	brne	.+16     	; 0x80e <_ZN13VoiceRecorder2UpEv+0xae>
	{
		MenuPosition1(8, "Change Pitch", "Include Echo");
 7fe:	23 ef       	ldi	r18, 0xF3	; 243
 800:	32 e0       	ldi	r19, 0x02	; 2
 802:	4a ea       	ldi	r20, 0xAA	; 170
 804:	52 e0       	ldi	r21, 0x02	; 2
 806:	68 e0       	ldi	r22, 0x08	; 8
 808:	70 e0       	ldi	r23, 0x00	; 0
 80a:	b6 dd       	rcall	.-1172   	; 0x378 <_ZN13VoiceRecorder13MenuPosition1EiPcS0_>
 80c:	a2 c0       	rjmp	.+324    	; 0x952 <_ZN13VoiceRecorder2UpEv+0x1f2>
	}
	else if (Position == 10)
 80e:	6a 30       	cpi	r22, 0x0A	; 10
 810:	71 05       	cpc	r23, r1
	{
		MenuPosition1(9, "Include Echo", "Fast Forward");
 812:	41 f4       	brne	.+16     	; 0x824 <_ZN13VoiceRecorder2UpEv+0xc4>
 814:	20 e0       	ldi	r18, 0x00	; 0
 816:	33 e0       	ldi	r19, 0x03	; 3
 818:	43 ef       	ldi	r20, 0xF3	; 243
 81a:	52 e0       	ldi	r21, 0x02	; 2
 81c:	69 e0       	ldi	r22, 0x09	; 9
 81e:	70 e0       	ldi	r23, 0x00	; 0
 820:	ab dd       	rcall	.-1194   	; 0x378 <_ZN13VoiceRecorder13MenuPosition1EiPcS0_>
 822:	97 c0       	rjmp	.+302    	; 0x952 <_ZN13VoiceRecorder2UpEv+0x1f2>
	}
	else if (Position == 11)
 824:	6b 30       	cpi	r22, 0x0B	; 11
 826:	71 05       	cpc	r23, r1
	{
		MenuPosition1(10, "Fast Forward", "DeleteRecording");
 828:	41 f4       	brne	.+16     	; 0x83a <_ZN13VoiceRecorder2UpEv+0xda>
 82a:	2d e0       	ldi	r18, 0x0D	; 13
 82c:	33 e0       	ldi	r19, 0x03	; 3
 82e:	40 e0       	ldi	r20, 0x00	; 0
 830:	53 e0       	ldi	r21, 0x03	; 3
 832:	6a e0       	ldi	r22, 0x0A	; 10
 834:	70 e0       	ldi	r23, 0x00	; 0
 836:	a0 dd       	rcall	.-1216   	; 0x378 <_ZN13VoiceRecorder13MenuPosition1EiPcS0_>
 838:	8c c0       	rjmp	.+280    	; 0x952 <_ZN13VoiceRecorder2UpEv+0x1f2>
	}
	else if (Position == 13)
 83a:	6d 30       	cpi	r22, 0x0D	; 13
 83c:	71 05       	cpc	r23, r1
	{
		MenuPosition1(12, "High Pitch", "Low Pitch");
 83e:	41 f4       	brne	.+16     	; 0x850 <_ZN13VoiceRecorder2UpEv+0xf0>
 840:	25 e9       	ldi	r18, 0x95	; 149
 842:	32 e0       	ldi	r19, 0x02	; 2
 844:	4f e9       	ldi	r20, 0x9F	; 159
 846:	52 e0       	ldi	r21, 0x02	; 2
 848:	6c e0       	ldi	r22, 0x0C	; 12
 84a:	70 e0       	ldi	r23, 0x00	; 0
 84c:	95 dd       	rcall	.-1238   	; 0x378 <_ZN13VoiceRecorder13MenuPosition1EiPcS0_>
 84e:	81 c0       	rjmp	.+258    	; 0x952 <_ZN13VoiceRecorder2UpEv+0x1f2>
	}
	else if (Position == 15)
 850:	6f 30       	cpi	r22, 0x0F	; 15
 852:	71 05       	cpc	r23, r1
 854:	b9 f5       	brne	.+110    	; 0x8c4 <_ZN13VoiceRecorder2UpEv+0x164>
	{
		if (Volume != 7){
 856:	80 91 1b 02 	lds	r24, 0x021B	; 0x80021b <Volume>
 85a:	90 91 1c 02 	lds	r25, 0x021C	; 0x80021c <Volume+0x1>
 85e:	87 30       	cpi	r24, 0x07	; 7
 860:	91 05       	cpc	r25, r1
			Volume++;
 862:	29 f0       	breq	.+10     	; 0x86e <_ZN13VoiceRecorder2UpEv+0x10e>
 864:	01 96       	adiw	r24, 0x01	; 1
 866:	90 93 1c 02 	sts	0x021C, r25	; 0x80021c <Volume+0x1>
		}
		MyLCD.Clear();
 86a:	80 93 1b 02 	sts	0x021B, r24	; 0x80021b <Volume>
 86e:	8e e1       	ldi	r24, 0x1E	; 30
 870:	93 e0       	ldi	r25, 0x03	; 3
		MyLCD.PrintString_xy(0, 5, "Volume");
 872:	34 dd       	rcall	.-1432   	; 0x2dc <_ZN3LCD5ClearEv>
 874:	2e eb       	ldi	r18, 0xBE	; 190
 876:	32 e0       	ldi	r19, 0x02	; 2
 878:	45 e0       	ldi	r20, 0x05	; 5
 87a:	60 e0       	ldi	r22, 0x00	; 0
 87c:	8e e1       	ldi	r24, 0x1E	; 30
 87e:	93 e0       	ldi	r25, 0x03	; 3
 880:	0d dd       	rcall	.-1510   	; 0x29c <_ZN3LCD14PrintString_xyEccPc>
 882:	4a e0       	ldi	r20, 0x0A	; 10
 884:	be 01       	movw	r22, r28
 886:	6f 5f       	subi	r22, 0xFF	; 255
 888:	7f 4f       	sbci	r23, 0xFF	; 255
 88a:	80 91 1b 02 	lds	r24, 0x021B	; 0x80021b <Volume>
 88e:	90 91 1c 02 	lds	r25, 0x021C	; 0x80021c <Volume+0x1>
		char List[4];
		itoa(Volume,List,10);
		MyLCD.PrintString_xy(1, 7, List);
 892:	d3 d1       	rcall	.+934    	; 0xc3a <__itoa_ncheck>
 894:	9e 01       	movw	r18, r28
 896:	2f 5f       	subi	r18, 0xFF	; 255
 898:	3f 4f       	sbci	r19, 0xFF	; 255
 89a:	47 e0       	ldi	r20, 0x07	; 7
 89c:	61 e0       	ldi	r22, 0x01	; 1
 89e:	8e e1       	ldi	r24, 0x1E	; 30
 8a0:	93 e0       	ldi	r25, 0x03	; 3
 8a2:	fc dc       	rcall	.-1544   	; 0x29c <_ZN3LCD14PrintString_xyEccPc>
		Position = 15;
 8a4:	8f e0       	ldi	r24, 0x0F	; 15
 8a6:	90 e0       	ldi	r25, 0x00	; 0
 8a8:	90 93 22 03 	sts	0x0322, r25	; 0x800322 <Position+0x1>
 8ac:	80 93 21 03 	sts	0x0321, r24	; 0x800321 <Position>
 8b0:	2f ef       	ldi	r18, 0xFF	; 255
 8b2:	89 e6       	ldi	r24, 0x69	; 105
 8b4:	98 e1       	ldi	r25, 0x18	; 24
 8b6:	21 50       	subi	r18, 0x01	; 1
 8b8:	80 40       	sbci	r24, 0x00	; 0
 8ba:	90 40       	sbci	r25, 0x00	; 0
 8bc:	e1 f7       	brne	.-8      	; 0x8b6 <_ZN13VoiceRecorder2UpEv+0x156>
 8be:	00 c0       	rjmp	.+0      	; 0x8c0 <_ZN13VoiceRecorder2UpEv+0x160>
 8c0:	00 00       	nop
 8c2:	47 c0       	rjmp	.+142    	; 0x952 <_ZN13VoiceRecorder2UpEv+0x1f2>
		_delay_ms(500);
	}
	else if (Position==17){
 8c4:	61 31       	cpi	r22, 0x11	; 17
 8c6:	71 05       	cpc	r23, r1
 8c8:	e9 f4       	brne	.+58     	; 0x904 <_ZN13VoiceRecorder2UpEv+0x1a4>
		FileIndex = FileIndex;
 8ca:	40 91 1f 03 	lds	r20, 0x031F	; 0x80031f <FileIndex>
 8ce:	50 91 20 03 	lds	r21, 0x0320	; 0x800320 <FileIndex+0x1>
		MenuPosition1(17, FileList[FileIndex], FileList[FileIndex + 1]);
 8d2:	9a 01       	movw	r18, r20
 8d4:	2f 5f       	subi	r18, 0xFF	; 255
 8d6:	3f 4f       	sbci	r19, 0xFF	; 255
 8d8:	b9 01       	movw	r22, r18
 8da:	66 0f       	add	r22, r22
 8dc:	77 1f       	adc	r23, r23
 8de:	66 0f       	add	r22, r22
 8e0:	77 1f       	adc	r23, r23
 8e2:	26 0f       	add	r18, r22
 8e4:	37 1f       	adc	r19, r23
 8e6:	20 50       	subi	r18, 0x00	; 0
 8e8:	3e 4f       	sbci	r19, 0xFE	; 254
 8ea:	ba 01       	movw	r22, r20
 8ec:	66 0f       	add	r22, r22
 8ee:	77 1f       	adc	r23, r23
 8f0:	66 0f       	add	r22, r22
 8f2:	77 1f       	adc	r23, r23
 8f4:	46 0f       	add	r20, r22
 8f6:	57 1f       	adc	r21, r23
 8f8:	40 50       	subi	r20, 0x00	; 0
 8fa:	5e 4f       	sbci	r21, 0xFE	; 254
 8fc:	61 e1       	ldi	r22, 0x11	; 17
 8fe:	70 e0       	ldi	r23, 0x00	; 0
 900:	3b dd       	rcall	.-1418   	; 0x378 <_ZN13VoiceRecorder13MenuPosition1EiPcS0_>
 902:	27 c0       	rjmp	.+78     	; 0x952 <_ZN13VoiceRecorder2UpEv+0x1f2>
	}
	else if (Position>17){
 904:	62 31       	cpi	r22, 0x12	; 18
 906:	71 05       	cpc	r23, r1
 908:	24 f1       	brlt	.+72     	; 0x952 <_ZN13VoiceRecorder2UpEv+0x1f2>
		FileIndex --;
 90a:	20 91 1f 03 	lds	r18, 0x031F	; 0x80031f <FileIndex>
 90e:	30 91 20 03 	lds	r19, 0x0320	; 0x800320 <FileIndex+0x1>
 912:	a9 01       	movw	r20, r18
 914:	41 50       	subi	r20, 0x01	; 1
 916:	51 09       	sbc	r21, r1
 918:	50 93 20 03 	sts	0x0320, r21	; 0x800320 <FileIndex+0x1>
 91c:	40 93 1f 03 	sts	0x031F, r20	; 0x80031f <FileIndex>
		Position--;
 920:	61 50       	subi	r22, 0x01	; 1
 922:	71 09       	sbc	r23, r1
 924:	70 93 22 03 	sts	0x0322, r23	; 0x800322 <Position+0x1>
 928:	60 93 21 03 	sts	0x0321, r22	; 0x800321 <Position>
		MenuPosition1(Position, FileList[FileIndex], FileList[FileIndex + 1]);
 92c:	f9 01       	movw	r30, r18
 92e:	ee 0f       	add	r30, r30
 930:	ff 1f       	adc	r31, r31
 932:	ee 0f       	add	r30, r30
 934:	ff 1f       	adc	r31, r31
 936:	2e 0f       	add	r18, r30
 938:	3f 1f       	adc	r19, r31
 93a:	20 50       	subi	r18, 0x00	; 0
 93c:	3e 4f       	sbci	r19, 0xFE	; 254
 93e:	fa 01       	movw	r30, r20
 940:	ee 0f       	add	r30, r30
 942:	ff 1f       	adc	r31, r31
 944:	ee 0f       	add	r30, r30
 946:	ff 1f       	adc	r31, r31
 948:	4e 0f       	add	r20, r30
 94a:	5f 1f       	adc	r21, r31
 94c:	40 50       	subi	r20, 0x00	; 0
 94e:	5e 4f       	sbci	r21, 0xFE	; 254
 950:	13 dd       	rcall	.-1498   	; 0x378 <_ZN13VoiceRecorder13MenuPosition1EiPcS0_>
	}
}
 952:	0f 90       	pop	r0
 954:	0f 90       	pop	r0
 956:	0f 90       	pop	r0
 958:	0f 90       	pop	r0
 95a:	df 91       	pop	r29
 95c:	cf 91       	pop	r28
 95e:	08 95       	ret

00000960 <_ZN13VoiceRecorder4DownEv>:

void VoiceRecorder::Down(void)
{
 960:	cf 93       	push	r28
 962:	df 93       	push	r29
 964:	00 d0       	rcall	.+0      	; 0x966 <_ZN13VoiceRecorder4DownEv+0x6>
 966:	1f 92       	push	r1
 968:	cd b7       	in	r28, 0x3d	; 61
 96a:	de b7       	in	r29, 0x3e	; 62
	if (Position == 1)
 96c:	60 91 21 03 	lds	r22, 0x0321	; 0x800321 <Position>
 970:	70 91 22 03 	lds	r23, 0x0322	; 0x800322 <Position+0x1>
 974:	61 30       	cpi	r22, 0x01	; 1
 976:	71 05       	cpc	r23, r1
 978:	41 f4       	brne	.+16     	; 0x98a <_ZN13VoiceRecorder4DownEv+0x2a>
	{
		MenuPosition1(2, "Recordings", "Factory Reset");
 97a:	25 ee       	ldi	r18, 0xE5	; 229
 97c:	32 e0       	ldi	r19, 0x02	; 2
 97e:	48 e2       	ldi	r20, 0x28	; 40
 980:	52 e0       	ldi	r21, 0x02	; 2
 982:	62 e0       	ldi	r22, 0x02	; 2
 984:	70 e0       	ldi	r23, 0x00	; 0
 986:	f8 dc       	rcall	.-1552   	; 0x378 <_ZN13VoiceRecorder13MenuPosition1EiPcS0_>
 988:	d1 c0       	rjmp	.+418    	; 0xb2c <_ZN13VoiceRecorder4DownEv+0x1cc>
	}
	else if (Position == 2)
 98a:	62 30       	cpi	r22, 0x02	; 2
 98c:	71 05       	cpc	r23, r1
 98e:	41 f4       	brne	.+16     	; 0x9a0 <_ZN13VoiceRecorder4DownEv+0x40>
	{
		MenuPosition1(3, "Factory Reset", "Record Voice");
 990:	23 e3       	ldi	r18, 0x33	; 51
 992:	32 e0       	ldi	r19, 0x02	; 2
 994:	45 ee       	ldi	r20, 0xE5	; 229
 996:	52 e0       	ldi	r21, 0x02	; 2
 998:	63 e0       	ldi	r22, 0x03	; 3
 99a:	70 e0       	ldi	r23, 0x00	; 0
 99c:	ed dc       	rcall	.-1574   	; 0x378 <_ZN13VoiceRecorder13MenuPosition1EiPcS0_>
 99e:	c6 c0       	rjmp	.+396    	; 0xb2c <_ZN13VoiceRecorder4DownEv+0x1cc>
	}
	else if (Position == 3)
 9a0:	63 30       	cpi	r22, 0x03	; 3
 9a2:	71 05       	cpc	r23, r1
 9a4:	41 f4       	brne	.+16     	; 0x9b6 <_ZN13VoiceRecorder4DownEv+0x56>
	{
		MenuPosition1(1, "Record Voice", "Recordings");
 9a6:	28 e2       	ldi	r18, 0x28	; 40
 9a8:	32 e0       	ldi	r19, 0x02	; 2
 9aa:	43 e3       	ldi	r20, 0x33	; 51
 9ac:	52 e0       	ldi	r21, 0x02	; 2
 9ae:	61 e0       	ldi	r22, 0x01	; 1
 9b0:	70 e0       	ldi	r23, 0x00	; 0
 9b2:	e2 dc       	rcall	.-1596   	; 0x378 <_ZN13VoiceRecorder13MenuPosition1EiPcS0_>
 9b4:	bb c0       	rjmp	.+374    	; 0xb2c <_ZN13VoiceRecorder4DownEv+0x1cc>
	}
	else if (Position == 6)
 9b6:	66 30       	cpi	r22, 0x06	; 6
 9b8:	71 05       	cpc	r23, r1
 9ba:	41 f4       	brne	.+16     	; 0x9cc <_ZN13VoiceRecorder4DownEv+0x6c>
	{
		MenuPosition1(7, "Change Volume", "Change Pitch");
 9bc:	2a ea       	ldi	r18, 0xAA	; 170
 9be:	32 e0       	ldi	r19, 0x02	; 2
 9c0:	47 eb       	ldi	r20, 0xB7	; 183
 9c2:	52 e0       	ldi	r21, 0x02	; 2
 9c4:	67 e0       	ldi	r22, 0x07	; 7
 9c6:	70 e0       	ldi	r23, 0x00	; 0
 9c8:	d7 dc       	rcall	.-1618   	; 0x378 <_ZN13VoiceRecorder13MenuPosition1EiPcS0_>
 9ca:	b0 c0       	rjmp	.+352    	; 0xb2c <_ZN13VoiceRecorder4DownEv+0x1cc>
	}
	else if (Position == 7)
 9cc:	67 30       	cpi	r22, 0x07	; 7
 9ce:	71 05       	cpc	r23, r1
 9d0:	41 f4       	brne	.+16     	; 0x9e2 <_ZN13VoiceRecorder4DownEv+0x82>
	{
		MenuPosition1(8, "Change Pitch", "Include Echo");
 9d2:	23 ef       	ldi	r18, 0xF3	; 243
 9d4:	32 e0       	ldi	r19, 0x02	; 2
 9d6:	4a ea       	ldi	r20, 0xAA	; 170
 9d8:	52 e0       	ldi	r21, 0x02	; 2
 9da:	68 e0       	ldi	r22, 0x08	; 8
 9dc:	70 e0       	ldi	r23, 0x00	; 0
 9de:	cc dc       	rcall	.-1640   	; 0x378 <_ZN13VoiceRecorder13MenuPosition1EiPcS0_>
 9e0:	a5 c0       	rjmp	.+330    	; 0xb2c <_ZN13VoiceRecorder4DownEv+0x1cc>
	}
	else if (Position == 8)
 9e2:	68 30       	cpi	r22, 0x08	; 8
 9e4:	71 05       	cpc	r23, r1
 9e6:	41 f4       	brne	.+16     	; 0x9f8 <_ZN13VoiceRecorder4DownEv+0x98>
	{
		MenuPosition1(9, "Include Echo", "Fast Forward");
 9e8:	20 e0       	ldi	r18, 0x00	; 0
 9ea:	33 e0       	ldi	r19, 0x03	; 3
 9ec:	43 ef       	ldi	r20, 0xF3	; 243
 9ee:	52 e0       	ldi	r21, 0x02	; 2
 9f0:	69 e0       	ldi	r22, 0x09	; 9
 9f2:	70 e0       	ldi	r23, 0x00	; 0
 9f4:	c1 dc       	rcall	.-1662   	; 0x378 <_ZN13VoiceRecorder13MenuPosition1EiPcS0_>
 9f6:	9a c0       	rjmp	.+308    	; 0xb2c <_ZN13VoiceRecorder4DownEv+0x1cc>
	}
	else if (Position == 9)
 9f8:	69 30       	cpi	r22, 0x09	; 9
 9fa:	71 05       	cpc	r23, r1
 9fc:	41 f4       	brne	.+16     	; 0xa0e <_ZN13VoiceRecorder4DownEv+0xae>
	{
		MenuPosition1(10, "Fast Forward", "DeleteRecording");
 9fe:	2d e0       	ldi	r18, 0x0D	; 13
 a00:	33 e0       	ldi	r19, 0x03	; 3
 a02:	40 e0       	ldi	r20, 0x00	; 0
 a04:	53 e0       	ldi	r21, 0x03	; 3
 a06:	6a e0       	ldi	r22, 0x0A	; 10
 a08:	70 e0       	ldi	r23, 0x00	; 0
 a0a:	b6 dc       	rcall	.-1684   	; 0x378 <_ZN13VoiceRecorder13MenuPosition1EiPcS0_>
 a0c:	8f c0       	rjmp	.+286    	; 0xb2c <_ZN13VoiceRecorder4DownEv+0x1cc>
	}
	else if (Position == 10)
 a0e:	6a 30       	cpi	r22, 0x0A	; 10
 a10:	71 05       	cpc	r23, r1
	{
		MenuPosition1(11, "DeleteRecording", "");
 a12:	41 f4       	brne	.+16     	; 0xa24 <_ZN13VoiceRecorder4DownEv+0xc4>
 a14:	20 e6       	ldi	r18, 0x60	; 96
 a16:	32 e0       	ldi	r19, 0x02	; 2
 a18:	4d e0       	ldi	r20, 0x0D	; 13
 a1a:	53 e0       	ldi	r21, 0x03	; 3
 a1c:	6b e0       	ldi	r22, 0x0B	; 11
 a1e:	70 e0       	ldi	r23, 0x00	; 0
 a20:	ab dc       	rcall	.-1706   	; 0x378 <_ZN13VoiceRecorder13MenuPosition1EiPcS0_>
 a22:	84 c0       	rjmp	.+264    	; 0xb2c <_ZN13VoiceRecorder4DownEv+0x1cc>
	}
	else if (Position == 12)
 a24:	6c 30       	cpi	r22, 0x0C	; 12
 a26:	71 05       	cpc	r23, r1
	{
		MenuPosition1(13, "Low Pitch", "");
 a28:	41 f4       	brne	.+16     	; 0xa3a <_ZN13VoiceRecorder4DownEv+0xda>
 a2a:	20 e6       	ldi	r18, 0x60	; 96
 a2c:	32 e0       	ldi	r19, 0x02	; 2
 a2e:	45 e9       	ldi	r20, 0x95	; 149
 a30:	52 e0       	ldi	r21, 0x02	; 2
 a32:	6d e0       	ldi	r22, 0x0D	; 13
 a34:	70 e0       	ldi	r23, 0x00	; 0
 a36:	a0 dc       	rcall	.-1728   	; 0x378 <_ZN13VoiceRecorder13MenuPosition1EiPcS0_>
 a38:	79 c0       	rjmp	.+242    	; 0xb2c <_ZN13VoiceRecorder4DownEv+0x1cc>
	}
	else if (Position == 15)
 a3a:	6f 30       	cpi	r22, 0x0F	; 15
 a3c:	71 05       	cpc	r23, r1
 a3e:	b9 f5       	brne	.+110    	; 0xaae <_ZN13VoiceRecorder4DownEv+0x14e>
	{
		if (Volume != 7){
 a40:	80 91 1b 02 	lds	r24, 0x021B	; 0x80021b <Volume>
 a44:	90 91 1c 02 	lds	r25, 0x021C	; 0x80021c <Volume+0x1>
 a48:	87 30       	cpi	r24, 0x07	; 7
 a4a:	91 05       	cpc	r25, r1
			Volume++;
 a4c:	29 f0       	breq	.+10     	; 0xa58 <_ZN13VoiceRecorder4DownEv+0xf8>
 a4e:	01 96       	adiw	r24, 0x01	; 1
 a50:	90 93 1c 02 	sts	0x021C, r25	; 0x80021c <Volume+0x1>
 a54:	80 93 1b 02 	sts	0x021B, r24	; 0x80021b <Volume>
		}
		MyLCD.Clear();
 a58:	8e e1       	ldi	r24, 0x1E	; 30
 a5a:	93 e0       	ldi	r25, 0x03	; 3
		MyLCD.PrintString_xy(0, 5, "Volume");
 a5c:	3f dc       	rcall	.-1922   	; 0x2dc <_ZN3LCD5ClearEv>
 a5e:	2e eb       	ldi	r18, 0xBE	; 190
 a60:	32 e0       	ldi	r19, 0x02	; 2
 a62:	45 e0       	ldi	r20, 0x05	; 5
 a64:	60 e0       	ldi	r22, 0x00	; 0
 a66:	8e e1       	ldi	r24, 0x1E	; 30
 a68:	93 e0       	ldi	r25, 0x03	; 3
 a6a:	18 dc       	rcall	.-2000   	; 0x29c <_ZN3LCD14PrintString_xyEccPc>
 a6c:	4a e0       	ldi	r20, 0x0A	; 10
 a6e:	be 01       	movw	r22, r28
 a70:	6f 5f       	subi	r22, 0xFF	; 255
 a72:	7f 4f       	sbci	r23, 0xFF	; 255
 a74:	80 91 1b 02 	lds	r24, 0x021B	; 0x80021b <Volume>
 a78:	90 91 1c 02 	lds	r25, 0x021C	; 0x80021c <Volume+0x1>
		char List[4];
		itoa(Volume,List,10);
		MyLCD.PrintString_xy(1, 7, List);
 a7c:	de d0       	rcall	.+444    	; 0xc3a <__itoa_ncheck>
 a7e:	9e 01       	movw	r18, r28
 a80:	2f 5f       	subi	r18, 0xFF	; 255
 a82:	3f 4f       	sbci	r19, 0xFF	; 255
 a84:	47 e0       	ldi	r20, 0x07	; 7
 a86:	61 e0       	ldi	r22, 0x01	; 1
 a88:	8e e1       	ldi	r24, 0x1E	; 30
 a8a:	93 e0       	ldi	r25, 0x03	; 3
 a8c:	07 dc       	rcall	.-2034   	; 0x29c <_ZN3LCD14PrintString_xyEccPc>
		Position = 15;
 a8e:	8f e0       	ldi	r24, 0x0F	; 15
 a90:	90 e0       	ldi	r25, 0x00	; 0
 a92:	90 93 22 03 	sts	0x0322, r25	; 0x800322 <Position+0x1>
 a96:	80 93 21 03 	sts	0x0321, r24	; 0x800321 <Position>
 a9a:	2f ef       	ldi	r18, 0xFF	; 255
 a9c:	89 e6       	ldi	r24, 0x69	; 105
 a9e:	98 e1       	ldi	r25, 0x18	; 24
 aa0:	21 50       	subi	r18, 0x01	; 1
 aa2:	80 40       	sbci	r24, 0x00	; 0
 aa4:	90 40       	sbci	r25, 0x00	; 0
 aa6:	e1 f7       	brne	.-8      	; 0xaa0 <_ZN13VoiceRecorder4DownEv+0x140>
 aa8:	00 c0       	rjmp	.+0      	; 0xaaa <_ZN13VoiceRecorder4DownEv+0x14a>
 aaa:	00 00       	nop
 aac:	3f c0       	rjmp	.+126    	; 0xb2c <_ZN13VoiceRecorder4DownEv+0x1cc>
		_delay_ms(500);
	}
	else if (Position>=17){
 aae:	61 31       	cpi	r22, 0x11	; 17
 ab0:	71 05       	cpc	r23, r1
 ab2:	e4 f1       	brlt	.+120    	; 0xb2c <_ZN13VoiceRecorder4DownEv+0x1cc>
		if (FileIndex >= N - 1){
 ab4:	20 91 19 02 	lds	r18, 0x0219	; 0x800219 <N>
 ab8:	30 91 1a 02 	lds	r19, 0x021A	; 0x80021a <N+0x1>
 abc:	21 50       	subi	r18, 0x01	; 1
 abe:	31 09       	sbc	r19, r1
 ac0:	40 91 1f 03 	lds	r20, 0x031F	; 0x80031f <FileIndex>
 ac4:	50 91 20 03 	lds	r21, 0x0320	; 0x800320 <FileIndex+0x1>
 ac8:	42 17       	cp	r20, r18
 aca:	53 07       	cpc	r21, r19
			MenuPosition1(Position, FileList[FileIndex], "");
 acc:	6c f0       	brlt	.+26     	; 0xae8 <_ZN13VoiceRecorder4DownEv+0x188>
 ace:	9a 01       	movw	r18, r20
 ad0:	22 0f       	add	r18, r18
 ad2:	33 1f       	adc	r19, r19
 ad4:	22 0f       	add	r18, r18
 ad6:	33 1f       	adc	r19, r19
 ad8:	42 0f       	add	r20, r18
 ada:	53 1f       	adc	r21, r19
 adc:	40 50       	subi	r20, 0x00	; 0
 ade:	5e 4f       	sbci	r21, 0xFE	; 254
 ae0:	20 e6       	ldi	r18, 0x60	; 96
 ae2:	32 e0       	ldi	r19, 0x02	; 2
 ae4:	49 dc       	rcall	.-1902   	; 0x378 <_ZN13VoiceRecorder13MenuPosition1EiPcS0_>
 ae6:	22 c0       	rjmp	.+68     	; 0xb2c <_ZN13VoiceRecorder4DownEv+0x1cc>
		}
		else{
			FileIndex++;
 ae8:	4f 5f       	subi	r20, 0xFF	; 255
 aea:	5f 4f       	sbci	r21, 0xFF	; 255
 aec:	50 93 20 03 	sts	0x0320, r21	; 0x800320 <FileIndex+0x1>
 af0:	40 93 1f 03 	sts	0x031F, r20	; 0x80031f <FileIndex>
			Position++;
 af4:	6f 5f       	subi	r22, 0xFF	; 255
 af6:	7f 4f       	sbci	r23, 0xFF	; 255
 af8:	70 93 22 03 	sts	0x0322, r23	; 0x800322 <Position+0x1>
 afc:	60 93 21 03 	sts	0x0321, r22	; 0x800321 <Position>
			MenuPosition1(Position, FileList[FileIndex], FileList[FileIndex + 1]);
 b00:	9a 01       	movw	r18, r20
 b02:	2f 5f       	subi	r18, 0xFF	; 255
 b04:	3f 4f       	sbci	r19, 0xFF	; 255
 b06:	f9 01       	movw	r30, r18
 b08:	ee 0f       	add	r30, r30
 b0a:	ff 1f       	adc	r31, r31
 b0c:	ee 0f       	add	r30, r30
 b0e:	ff 1f       	adc	r31, r31
 b10:	2e 0f       	add	r18, r30
 b12:	3f 1f       	adc	r19, r31
 b14:	20 50       	subi	r18, 0x00	; 0
 b16:	3e 4f       	sbci	r19, 0xFE	; 254
 b18:	fa 01       	movw	r30, r20
 b1a:	ee 0f       	add	r30, r30
 b1c:	ff 1f       	adc	r31, r31
 b1e:	ee 0f       	add	r30, r30
 b20:	ff 1f       	adc	r31, r31
 b22:	4e 0f       	add	r20, r30
 b24:	5f 1f       	adc	r21, r31
 b26:	40 50       	subi	r20, 0x00	; 0
 b28:	5e 4f       	sbci	r21, 0xFE	; 254
 b2a:	26 dc       	rcall	.-1972   	; 0x378 <_ZN13VoiceRecorder13MenuPosition1EiPcS0_>
		}
	}
}
 b2c:	0f 90       	pop	r0
 b2e:	0f 90       	pop	r0
 b30:	0f 90       	pop	r0
 b32:	0f 90       	pop	r0
 b34:	df 91       	pop	r29
 b36:	cf 91       	pop	r28
 b38:	08 95       	ret

00000b3a <_ZN13VoiceRecorder4BackEv>:

void VoiceRecorder::Back(void)
{
	if (Position == 1 || Position ==2 || Position == 3) {
 b3a:	20 91 21 03 	lds	r18, 0x0321	; 0x800321 <Position>
 b3e:	30 91 22 03 	lds	r19, 0x0322	; 0x800322 <Position+0x1>
 b42:	a9 01       	movw	r20, r18
 b44:	41 50       	subi	r20, 0x01	; 1
 b46:	51 09       	sbc	r21, r1
 b48:	43 30       	cpi	r20, 0x03	; 3
 b4a:	51 05       	cpc	r21, r1
 b4c:	40 f4       	brcc	.+16     	; 0xb5e <_ZN13VoiceRecorder4BackEv+0x24>
		MenuPosition1(1, "Record Voice", "Recordings");
 b4e:	28 e2       	ldi	r18, 0x28	; 40
 b50:	32 e0       	ldi	r19, 0x02	; 2
 b52:	43 e3       	ldi	r20, 0x33	; 51
 b54:	52 e0       	ldi	r21, 0x02	; 2
 b56:	61 e0       	ldi	r22, 0x01	; 1
 b58:	70 e0       	ldi	r23, 0x00	; 0
 b5a:	0e cc       	rjmp	.-2020   	; 0x378 <_ZN13VoiceRecorder13MenuPosition1EiPcS0_>
 b5c:	08 95       	ret
	}
	else if (Position == 4 || Position == 5){
 b5e:	a9 01       	movw	r20, r18
 b60:	44 50       	subi	r20, 0x04	; 4
 b62:	51 09       	sbc	r21, r1
 b64:	42 30       	cpi	r20, 0x02	; 2
 b66:	51 05       	cpc	r21, r1
 b68:	40 f4       	brcc	.+16     	; 0xb7a <_ZN13VoiceRecorder4BackEv+0x40>
		MenuPosition1(1, "Record Voice", "Recordings");
 b6a:	28 e2       	ldi	r18, 0x28	; 40
 b6c:	32 e0       	ldi	r19, 0x02	; 2
 b6e:	43 e3       	ldi	r20, 0x33	; 51
 b70:	52 e0       	ldi	r21, 0x02	; 2
 b72:	61 e0       	ldi	r22, 0x01	; 1
 b74:	70 e0       	ldi	r23, 0x00	; 0
 b76:	00 cc       	rjmp	.-2048   	; 0x378 <_ZN13VoiceRecorder13MenuPosition1EiPcS0_>
 b78:	08 95       	ret
	}
	else if (Position==17){
 b7a:	21 31       	cpi	r18, 0x11	; 17
 b7c:	31 05       	cpc	r19, r1
 b7e:	41 f4       	brne	.+16     	; 0xb90 <_ZN13VoiceRecorder4BackEv+0x56>
		MenuPosition1(2, "Recordings", "Change Volume");
 b80:	27 eb       	ldi	r18, 0xB7	; 183
 b82:	32 e0       	ldi	r19, 0x02	; 2
 b84:	48 e2       	ldi	r20, 0x28	; 40
 b86:	52 e0       	ldi	r21, 0x02	; 2
 b88:	62 e0       	ldi	r22, 0x02	; 2
 b8a:	70 e0       	ldi	r23, 0x00	; 0
 b8c:	f5 cb       	rjmp	.-2070   	; 0x378 <_ZN13VoiceRecorder13MenuPosition1EiPcS0_>
 b8e:	08 95       	ret
	}
	else if (Position == 6 || Position == 7 || Position == 8 || Position == 9 || Position == 10 || Position == 11){
 b90:	a9 01       	movw	r20, r18
 b92:	46 50       	subi	r20, 0x06	; 6
 b94:	51 09       	sbc	r21, r1
 b96:	46 30       	cpi	r20, 0x06	; 6
 b98:	51 05       	cpc	r21, r1
 b9a:	e8 f4       	brcc	.+58     	; 0xbd6 <_ZN13VoiceRecorder4BackEv+0x9c>
		MenuPosition1(17, FileList[FileIndex], FileList[FileIndex + 1]);
 b9c:	40 91 1f 03 	lds	r20, 0x031F	; 0x80031f <FileIndex>
 ba0:	50 91 20 03 	lds	r21, 0x0320	; 0x800320 <FileIndex+0x1>
 ba4:	9a 01       	movw	r18, r20
 ba6:	2f 5f       	subi	r18, 0xFF	; 255
 ba8:	3f 4f       	sbci	r19, 0xFF	; 255
 baa:	b9 01       	movw	r22, r18
 bac:	66 0f       	add	r22, r22
 bae:	77 1f       	adc	r23, r23
 bb0:	66 0f       	add	r22, r22
 bb2:	77 1f       	adc	r23, r23
 bb4:	26 0f       	add	r18, r22
 bb6:	37 1f       	adc	r19, r23
 bb8:	20 50       	subi	r18, 0x00	; 0
 bba:	3e 4f       	sbci	r19, 0xFE	; 254
 bbc:	ba 01       	movw	r22, r20
 bbe:	66 0f       	add	r22, r22
 bc0:	77 1f       	adc	r23, r23
 bc2:	66 0f       	add	r22, r22
 bc4:	77 1f       	adc	r23, r23
 bc6:	46 0f       	add	r20, r22
 bc8:	57 1f       	adc	r21, r23
 bca:	40 50       	subi	r20, 0x00	; 0
 bcc:	5e 4f       	sbci	r21, 0xFE	; 254
 bce:	61 e1       	ldi	r22, 0x11	; 17
 bd0:	70 e0       	ldi	r23, 0x00	; 0
 bd2:	d2 cb       	rjmp	.-2140   	; 0x378 <_ZN13VoiceRecorder13MenuPosition1EiPcS0_>
 bd4:	08 95       	ret
	}
	else if (Position == 12 || Position == 13){
 bd6:	a9 01       	movw	r20, r18
 bd8:	4c 50       	subi	r20, 0x0C	; 12
 bda:	51 09       	sbc	r21, r1
 bdc:	42 30       	cpi	r20, 0x02	; 2
 bde:	51 05       	cpc	r21, r1
 be0:	40 f4       	brcc	.+16     	; 0xbf2 <_ZN13VoiceRecorder4BackEv+0xb8>
		MenuPosition1(8, "Change Pitch", "Include Echo");
 be2:	23 ef       	ldi	r18, 0xF3	; 243
 be4:	32 e0       	ldi	r19, 0x02	; 2
 be6:	4a ea       	ldi	r20, 0xAA	; 170
 be8:	52 e0       	ldi	r21, 0x02	; 2
 bea:	68 e0       	ldi	r22, 0x08	; 8
 bec:	70 e0       	ldi	r23, 0x00	; 0
 bee:	c4 cb       	rjmp	.-2168   	; 0x378 <_ZN13VoiceRecorder13MenuPosition1EiPcS0_>
 bf0:	08 95       	ret
	}
	else if (Position == 18){
 bf2:	22 31       	cpi	r18, 0x12	; 18
 bf4:	31 05       	cpc	r19, r1
 bf6:	41 f4       	brne	.+16     	; 0xc08 <_ZN13VoiceRecorder4BackEv+0xce>
		MenuPosition1(7, "Change Volume", "Change Pitch");
 bf8:	2a ea       	ldi	r18, 0xAA	; 170
 bfa:	32 e0       	ldi	r19, 0x02	; 2
 bfc:	47 eb       	ldi	r20, 0xB7	; 183
 bfe:	52 e0       	ldi	r21, 0x02	; 2
 c00:	67 e0       	ldi	r22, 0x07	; 7
 c02:	70 e0       	ldi	r23, 0x00	; 0
 c04:	b9 cb       	rjmp	.-2190   	; 0x378 <_ZN13VoiceRecorder13MenuPosition1EiPcS0_>
 c06:	08 95       	ret
	}
	else if (Position == 16){
 c08:	20 31       	cpi	r18, 0x10	; 16
 c0a:	31 05       	cpc	r19, r1
 c0c:	39 f4       	brne	.+14     	; 0xc1c <_ZN13VoiceRecorder4BackEv+0xe2>
		MenuPosition1(3, "Factory Reset", "Record Voice");
 c0e:	23 e3       	ldi	r18, 0x33	; 51
 c10:	32 e0       	ldi	r19, 0x02	; 2
 c12:	45 ee       	ldi	r20, 0xE5	; 229
 c14:	52 e0       	ldi	r21, 0x02	; 2
 c16:	63 e0       	ldi	r22, 0x03	; 3
 c18:	70 e0       	ldi	r23, 0x00	; 0
 c1a:	ae cb       	rjmp	.-2212   	; 0x378 <_ZN13VoiceRecorder13MenuPosition1EiPcS0_>
 c1c:	08 95       	ret

00000c1e <_GLOBAL__sub_I_Position>:
	}
 c1e:	6f ef       	ldi	r22, 0xFF	; 255
 c20:	7f ef       	ldi	r23, 0xFF	; 255
 c22:	81 e0       	ldi	r24, 0x01	; 1
 c24:	90 e0       	ldi	r25, 0x00	; 0
 c26:	9c cb       	rjmp	.-2248   	; 0x360 <_Z41__static_initialization_and_destruction_0ii>
 c28:	08 95       	ret

00000c2a <__tablejump2__>:
 c2a:	ee 0f       	add	r30, r30
 c2c:	ff 1f       	adc	r31, r31
 c2e:	88 1f       	adc	r24, r24
 c30:	8b bf       	out	0x3b, r24	; 59
 c32:	07 90       	elpm	r0, Z+
 c34:	f6 91       	elpm	r31, Z
 c36:	e0 2d       	mov	r30, r0
 c38:	19 94       	eijmp

00000c3a <__itoa_ncheck>:
 c3a:	bb 27       	eor	r27, r27
 c3c:	4a 30       	cpi	r20, 0x0A	; 10
 c3e:	31 f4       	brne	.+12     	; 0xc4c <__itoa_ncheck+0x12>
 c40:	99 23       	and	r25, r25
 c42:	22 f4       	brpl	.+8      	; 0xc4c <__itoa_ncheck+0x12>
 c44:	bd e2       	ldi	r27, 0x2D	; 45
 c46:	90 95       	com	r25
 c48:	81 95       	neg	r24
 c4a:	9f 4f       	sbci	r25, 0xFF	; 255
 c4c:	01 c0       	rjmp	.+2      	; 0xc50 <__utoa_common>

00000c4e <__utoa_ncheck>:
 c4e:	bb 27       	eor	r27, r27

00000c50 <__utoa_common>:
 c50:	fb 01       	movw	r30, r22
 c52:	55 27       	eor	r21, r21
 c54:	aa 27       	eor	r26, r26
 c56:	88 0f       	add	r24, r24
 c58:	99 1f       	adc	r25, r25
 c5a:	aa 1f       	adc	r26, r26
 c5c:	a4 17       	cp	r26, r20
 c5e:	10 f0       	brcs	.+4      	; 0xc64 <__utoa_common+0x14>
 c60:	a4 1b       	sub	r26, r20
 c62:	83 95       	inc	r24
 c64:	50 51       	subi	r21, 0x10	; 16
 c66:	b9 f7       	brne	.-18     	; 0xc56 <__utoa_common+0x6>
 c68:	a0 5d       	subi	r26, 0xD0	; 208
 c6a:	aa 33       	cpi	r26, 0x3A	; 58
 c6c:	08 f0       	brcs	.+2      	; 0xc70 <__utoa_common+0x20>
 c6e:	a9 5d       	subi	r26, 0xD9	; 217
 c70:	a1 93       	st	Z+, r26
 c72:	00 97       	sbiw	r24, 0x00	; 0
 c74:	79 f7       	brne	.-34     	; 0xc54 <__utoa_common+0x4>
 c76:	b1 11       	cpse	r27, r1
 c78:	b1 93       	st	Z+, r27
 c7a:	11 92       	st	Z+, r1
 c7c:	cb 01       	movw	r24, r22
 c7e:	00 c0       	rjmp	.+0      	; 0xc80 <strrev>

00000c80 <strrev>:
 c80:	dc 01       	movw	r26, r24
 c82:	fc 01       	movw	r30, r24
 c84:	67 2f       	mov	r22, r23
 c86:	71 91       	ld	r23, Z+
 c88:	77 23       	and	r23, r23
 c8a:	e1 f7       	brne	.-8      	; 0xc84 <strrev+0x4>
 c8c:	32 97       	sbiw	r30, 0x02	; 2
 c8e:	04 c0       	rjmp	.+8      	; 0xc98 <strrev+0x18>
 c90:	7c 91       	ld	r23, X
 c92:	6d 93       	st	X+, r22
 c94:	70 83       	st	Z, r23
 c96:	62 91       	ld	r22, -Z
 c98:	ae 17       	cp	r26, r30
 c9a:	bf 07       	cpc	r27, r31
 c9c:	c8 f3       	brcs	.-14     	; 0xc90 <strrev+0x10>
 c9e:	08 95       	ret

00000ca0 <_exit>:
 ca0:	f8 94       	cli

00000ca2 <__stop_program>:
 ca2:	ff cf       	rjmp	.-2      	; 0xca2 <__stop_program>
